{"version":3,"sources":["constants/errorConstants.js","components/UI/Model/AlertMessageModal.jsx","assets/img/logo-modal.png","views/ResetPassword/ResetPassword.jsx"],"names":["REJECT_REASON","COMMISSION_PERCENTAGE_REQUIRED","CATEGORYNAME_REQUIRED","PHOTO_REQUIRED","PASSWORD_REQUIRED","OLD_PASSWORD_REQUIRED","SIMPLE_PASSWORD_VALIDATION","PASSWORD_VALIDATION","NEW_PASSWORD_REQUIRED","CONFIRM_PASSWORD_REQUIRED","CHANGE_PASSWORDS_NOT_MATCH","CHANGE_NEW_PASSWORDS_NOT_MATCH","SET_PASSWORDS_NOT_MATCH","FIRSTNAME_REQUIRED","LASTNAME_REQUIRED","EMAIL_REQUIRED","GENDER_REQUIRED","EMAIL_VALID","ADDRESS_REQUIRED","PHONE_REQUIRED","PHONE_VALID","RESTAURANT_CONTACT_VALID","MINIMUM_CART_REQUIRED","MINIMUM_CART_NUMBER","MAXIMUM_DISCOUNT_REQUIRED","MAXIMUM_DISCOUNT_NUMBER","COUPON_CODE_REQUIRED","COUPON_PERCENTAGE_REQUIRED","COUPON_PERCENTAGE_NUMBER","SELECT_RESTAURANT","SELECT_DATE_RANGE","SELECT_ONLY_IMAGE","GST_REQUIRED","PACKAGING_CHARGES_NUMBER","PACKAGING_CHARGES_REQUIRED","DELIVERY_CHARGE_KM_NUMBER","DELIVERY_CHARGE_KM_REQUIRED","ORDER_ACCEPT_TIME_NUMBER","ORDER_ACCEPT_TIME_REQUIRED","ORDER_PREPARING_TIME_NUMBER","ORDER_PREPARING_TIME_REQUIRED","CHEF_PLATFORM_FEE_REQUIRED","TCS_REQUIRED","PAYMENT_GATEWAY_TRANSACTION_PERCENTAGE_REQUIRED","CHEF_PLATFORM_FEE_NUMBER","TCS_NUMBER","PAYMENT_GATEWAY_TRANSACTION_PERCENTAGE_NUMBER","TITLE_REQUIRED","DEVICE_TYPE_REQUIRED","MESSAGE_REQUIRED","SELECT_CATEGORY","SELECT_FOOD_TYPE","PRICE_REQUIRED","PRICE_NUMBER","NAME_REQUIRED","ACCOUNT_NUMBER_REQUIRED","ACCOUNT_NUMBER_NUMBER","ACCOUNT_HOLDER_REQUIRED","IFSC_REQUIRED","RESTAURANT_NAME_REQUIRED","PAYMENT_OPTIONS_REQUIRED","ORDER_TYPE_REQUIRED","HOUSE_NUMBER_REQUIRED","LANDMARK_REQUIRED","AREA_REQUIRED","CITY_REQUIRED","STATE_REQUIRED","COUNTRY_REQUIRED","PINCODE_REQUIRED","PINCODE_VALID","ENTER_MESSAGE","DESCRIPTION_REQUIRED","OTP_REQUIRED","OTP_VALID","TRANSACTION_ID_REQUIRED","CHEF_NOT_SUBMIT_PROFILE","AlertMessageModal","props","useSelector","state","modal","message","notifyType","redirectURL","buttonClick","withButton","dispatch","useDispatch","className","id","tabIndex","role","aria-labelledby","style","display","zIndex","paddingTop","undefined","to","onClick","e","hideModal","stopPropagation","type","module","exports","withRouter","token","match","params","useState","isDisable","setIsDisable","password","confirmPassword","initialValues","auth","isResetPasswordTokenValid","errorMsg","isLoading","open","useEffect","resetPasswordTokenVerificationSaga","validationSchema","Yup","matches","required","oneOf","textAlign","src","require","alt","marginBottom","width","enableReinitialize","onSubmit","values","setSubmitting","requestData","resetPasswordSaga","submitBtnHandler","errors","touched","handleChange","handleBlur","handleSubmit","placeholder","name","value","onChange","onBlur","disabled","resetErrorMsg","marginTop","marginRight"],"mappings":"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","file":"static/js/71.6aebdcaa.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\r\nexport const REJECT_REASON = 'Please enter reason for rejection';\r\nexport const COMMISSION_PERCENTAGE_REQUIRED = 'Commission is required';\r\nexport const CATEGORYNAME_REQUIRED = 'Category name is required';\r\nexport const PHOTO_REQUIRED = 'Photo is required';\r\nexport const PASSWORD_REQUIRED = 'Password is required';\r\nexport const OLD_PASSWORD_REQUIRED = 'Old password is required';\r\nexport const SIMPLE_PASSWORD_VALIDATION =\r\n  'Password must contain atleast 8 digits';\r\nexport const PASSWORD_VALIDATION =\r\n  'Password must contain atleast 1 capital, 1 number and 1 special character.';\r\nexport const NEW_PASSWORD_REQUIRED = 'New password is required';\r\nexport const CONFIRM_PASSWORD_REQUIRED = 'Confirm password is required';\r\nexport const CHANGE_PASSWORDS_NOT_MATCH =\r\n  'Password & confirm password don’t match';\r\nexport const CHANGE_NEW_PASSWORDS_NOT_MATCH =\r\n  'New password & confirm password don’t match';\r\nexport const SET_PASSWORDS_NOT_MATCH =\r\n  \"Password and Confirm password doesn't match\";\r\nexport const FIRSTNAME_REQUIRED = 'Firstname is required';\r\nexport const LASTNAME_REQUIRED = 'Lastname is required';\r\nexport const EMAIL_REQUIRED = 'Email is required';\r\nexport const GENDER_REQUIRED = 'Gender is required';\r\nexport const EMAIL_VALID = 'Email must be a valid email';\r\nexport const ADDRESS_REQUIRED = 'Address is required';\r\nexport const PHONE_REQUIRED = 'Phone is required';\r\nexport const PHONE_VALID = 'Phone is required and must contains 10 digits';\r\nexport const RESTAURANT_CONTACT_REQUIRED = 'Vendor contact is required';\r\nexport const RESTAURANT_CONTACT_VALID =\r\n  'Vendor contact must contains 10 digits';\r\nexport const MINIMUM_CART_REQUIRED = 'Minimum cart value is required';\r\nexport const MINIMUM_CART_NUMBER = 'Minimum cart value must be a number';\r\nexport const MAXIMUM_DISCOUNT_REQUIRED = 'Maximum discount required';\r\nexport const MAXIMUM_DISCOUNT_NUMBER = 'Maximum discount must be a number';\r\nexport const COUPON_CODE_REQUIRED = 'Coupon Code is required';\r\nexport const COUPON_PERCENTAGE_REQUIRED = 'Percentage is required';\r\nexport const COUPON_PERCENTAGE_NUMBER = 'Percentage must be a number';\r\nexport const SELECT_RESTAURANT = 'Please select vendors';\r\nexport const SELECT_DATE_RANGE = 'Please select a date range for the promocode';\r\nexport const SELECT_ONLY_IMAGE = 'Select image file only';\r\nexport const APP_EMAIL_REQUIRED = 'App email is required';\r\nexport const CUSTOMER_CARE_NUMBER_CART_NUMBER =\r\n  'Customer care number cart value must be a number';\r\nexport const CUSTOMER_CARE_NUMBER_CART_REQUIRED =\r\n  'Customer care number cart value is required';\r\nexport const GST_REQUIRED = 'GST is required';\r\nexport const PRE_ORDER_DELIVERY_DAYS_NUMBER =\r\n  'Pre order delivery days must be a number';\r\nexport const PRE_ORDER_DELIVERY_DAYS_REQUIRED =\r\n  'Pre order delivery days is required';\r\nexport const COMMISSION_NUMBER = 'Commission must be a number';\r\nexport const COMMISSION_REQUIRED = 'Commission is required';\r\nexport const PACKAGING_CHARGES_NUMBER = 'Packaging charges must be a number';\r\nexport const PACKAGING_CHARGES_REQUIRED = 'Packaging charges is required';\r\nexport const DELIVERY_CHARGE_KM_NUMBER = 'Delivery charge km must be a number';\r\nexport const DELIVERY_CHARGE_KM_REQUIRED = 'Delivery charge km is required';\r\nexport const ORDER_ACCEPT_TIME_NUMBER = 'Order accept time must be a number';\r\nexport const ORDER_ACCEPT_TIME_REQUIRED = 'Order accept time is required';\r\nexport const ORDER_PREPARING_TIME_NUMBER =\r\n  'Order preparing time must be a number';\r\nexport const ORDER_PREPARING_TIME_REQUIRED = 'Order preparing time is required';\r\nexport const CHEF_PLATFORM_FEE_REQUIRED = 'Vendor platform fee is required';\r\nexport const TCS_REQUIRED = 'TCS is required';\r\nexport const PAYMENT_GATEWAY_TRANSACTION_PERCENTAGE_REQUIRED =\r\n  'Payment gateway transaction percentage is required';\r\nexport const CHEF_PLATFORM_FEE_NUMBER = 'Vendor platform fee must be a number';\r\nexport const TCS_NUMBER = 'TCS must be a number';\r\nexport const PAYMENT_GATEWAY_TRANSACTION_PERCENTAGE_NUMBER =\r\n  'Payment gateway transaction percentage must be a number';\r\nexport const TITLE_REQUIRED = 'Title is required';\r\nexport const DEVICE_TYPE_REQUIRED = 'Device type is required';\r\nexport const MESSAGE_REQUIRED = 'Message is required';\r\nexport const SELECT_CATEGORY = 'Please select category';\r\nexport const SELECT_FOOD_TYPE = 'Please select sub category type';\r\nexport const PRICE_REQUIRED = 'Price is required';\r\nexport const PRICE_NUMBER = 'Price must be a number';\r\nexport const NAME_REQUIRED = 'Name is required';\r\nexport const ACCOUNT_NUMBER_REQUIRED = 'Account number is required';\r\nexport const ACCOUNT_NUMBER_NUMBER = 'Account number must be a number';\r\nexport const SWIFT_CODE_REQUIRED = 'Swift code is required';\r\nexport const ACCOUNT_HOLDER_REQUIRED = 'Account Holder is required';\r\nexport const IFSC_REQUIRED = 'IFSC code is required';\r\nexport const PICKUP_REQUIRED = 'Pickup is required';\r\nexport const PICKUP_TIME_REQUIRED = 'Pickup Time is required';\r\nexport const CUSTOM_PICKUP_REQUIRED = 'Custom Pickup is required';\r\nexport const DELIVERY_REQUIRED = 'Delivery is required';\r\nexport const DELIVERY_TIME_REQUIRED = 'Delivery Time is required';\r\nexport const CUSTOM_DELIVERY_REQUIRED = 'Custom Delivery is required';\r\nexport const RESTAURANT_NAME_REQUIRED = 'Vendor Name is required';\r\nexport const PAYMENT_OPTIONS_REQUIRED = 'Payment Options is required';\r\nexport const ORDER_TYPE_REQUIRED = 'Order type is required';\r\nexport const HOUSE_NUMBER_REQUIRED = 'House number is required';\r\nexport const APARTMENT_REQUIRED = 'Apartment is required';\r\nexport const LANDMARK_REQUIRED = 'Landmark is required';\r\nexport const AREA_REQUIRED = 'Area is required';\r\nexport const CITY_REQUIRED = 'City is required';\r\nexport const STATE_REQUIRED = 'State is required';\r\nexport const COUNTRY_REQUIRED = 'Country is required';\r\nexport const PINCODE_REQUIRED = 'Pincode is required';\r\nexport const PINCODE_VALID = 'Pincode must contains 6 digits';\r\nexport const ENTER_MESSAGE = 'Please enter message';\r\nexport const DESCRIPTION_REQUIRED = 'Description is required';\r\nexport const OTP_REQUIRED = 'Please insert OTP';\r\nexport const OTP_VALID = 'OTP must contains 6 digits';\r\nexport const TRANSACTION_ID_REQUIRED = 'Transaction id is required';\r\n\r\nexport const CHEF_NOT_SUBMIT_PROFILE =\r\n  'Vendor has not submit his/her profile yet.';\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-nested-ternary */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { hideModal } from '../../../store/actions';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst AlertMessageModal = props => {\r\n  const {\r\n    message,\r\n    notifyType,\r\n    redirectURL,\r\n    buttonClick,\r\n    withButton,\r\n  } = useSelector(state => state.modal);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal-backdrop fade in error-modal-backdrop\" />\r\n      <div\r\n        className=\"modal coman-modal fade in error-modal\"\r\n        id=\"add-cat\"\r\n        tabIndex={-1}\r\n        role=\"dialog\"\r\n        aria-labelledby=\"myModalLabel\"\r\n        style={{ display: 'block', zIndex: 2052 }}\r\n        /* onClick={\r\n                redirectURL != undefined && redirectURL != \"\"\r\n                    ? () => {\r\n                        modalClose();\r\n                        if (redirectURL != undefined) {\r\n                            props.history.push(redirectURL);\r\n                        }\r\n                    }\r\n                    : modalClose\r\n            } */\r\n      >\r\n        <div className=\"modal-dialog modal-a\" role=\"document\">\r\n          <div\r\n            className={\r\n              notifyType === 2 || notifyType === 0\r\n                ? 'modal-content text-center animated bounceIn'\r\n                : 'modal-content text-center animated shake'\r\n            }\r\n          >\r\n            {' '}\r\n            {/* shake class when alert */}\r\n            <div className=\"modal-body\">\r\n              {/* {notifyType == 1\r\n                        ? ( */}\r\n\r\n              <div className=\"f-modal-alert\">\r\n                {notifyType === 1 ? (\r\n                  <div className=\"f-modal-icon f-modal-error animate\">\r\n                    <span className=\"f-modal-x-mark\">\r\n                      <span className=\"f-modal-line f-modal-left animateXLeft\" />\r\n                      <span className=\"f-modal-line f-modal-right animateXRight\" />\r\n                    </span>\r\n                    <div className=\"f-modal-placeholder\" />\r\n                    <div className=\"f-modal-fix\" />\r\n                  </div>\r\n                ) : notifyType === 2 ? (\r\n                  <div className=\"f-modal-icon f-modal-success animate\">\r\n                    <span className=\"f-modal-line f-modal-tip animateSuccessTip\" />\r\n                    <span className=\"f-modal-line f-modal-long animateSuccessLong\" />\r\n                    <div className=\"f-modal-placeholder\" />\r\n                    <div className=\"f-modal-fix\" />\r\n                  </div>\r\n                ) : notifyType === 3 ? (\r\n                  <div className=\"f-modal-icon f-modal-warning animate\">\r\n                    <span className=\"f-modal-body pulseWarningIns\" />\r\n                    <span className=\"f-modal-dot pulseWarningIns\" />\r\n                    <div className=\"f-modal-placeholder\" />\r\n                    <div className=\"f-modal-fix\" />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <p style={notifyType === 0 ? { paddingTop: '20px' } : {}}>\r\n                {message}\r\n              </p>\r\n              {withButton && (\r\n                <div className=\"text-center m-t-md\">\r\n                  {redirectURL !== undefined && redirectURL !== '' ? (\r\n                    <Link\r\n                      className=\"btn btn-primary\"\r\n                      to={redirectURL}\r\n                      onClick={\r\n                        buttonClick\r\n                          ? e => {\r\n                              dispatch(hideModal());\r\n                              e.stopPropagation();\r\n                              buttonClick();\r\n                            }\r\n                          : e => {\r\n                              dispatch(hideModal());\r\n                              e.stopPropagation();\r\n                            }\r\n                      }\r\n                    >\r\n                      Okay\r\n                    </Link>\r\n                  ) : (\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary\"\r\n                      onClick={\r\n                        buttonClick\r\n                          ? e => {\r\n                              dispatch(hideModal());\r\n                              e.stopPropagation();\r\n                              buttonClick();\r\n                            }\r\n                          : e => {\r\n                              dispatch(hideModal());\r\n                              e.stopPropagation();\r\n                            }\r\n                      }\r\n                    >\r\n                      Okay\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AlertMessageModal;\r\n","module.exports = __webpack_public_path__ + \"static/media/logo-modal.ec7f7918.png\";","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport {\r\n  resetPasswordTokenVerificationSaga,\r\n  resetPasswordSaga,\r\n  resetErrorMsg,\r\n} from '../../store/actions';\r\nimport AlertMessageModal from '../../components/UI/Model/AlertMessageModal';\r\nimport {\r\n  PASSWORD_REQUIRED,\r\n  PASSWORD_VALIDATION,\r\n  SET_PASSWORDS_NOT_MATCH,\r\n  CONFIRM_PASSWORD_REQUIRED,\r\n} from '../../constants/errorConstants';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst ResetPassword = props => {\r\n  const { token } = props.match.params;\r\n  const [isDisable, setIsDisable] = useState(false);\r\n  const [initialValues] = useState({\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n  const { isResetPasswordTokenValid, errorMsg, isLoading } = useSelector(\r\n    state => state.auth,\r\n  );\r\n  const { open } = useSelector(state => state.modal);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(resetPasswordTokenVerificationSaga(token));\r\n  }, []);\r\n\r\n  const validationSchema = Yup.object({\r\n    password: Yup.string()\r\n      .matches(\r\n        /^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\r\n        PASSWORD_VALIDATION,\r\n      )\r\n      .required(PASSWORD_REQUIRED),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref('password'), null], SET_PASSWORDS_NOT_MATCH)\r\n      .required(CONFIRM_PASSWORD_REQUIRED),\r\n  });\r\n\r\n  const submitBtnHandler = values => {\r\n    setIsDisable(true);\r\n    const requestData = {\r\n      ...values,\r\n      token,\r\n    };\r\n    dispatch(resetPasswordSaga({ requestData, setIsDisable }));\r\n  };\r\n\r\n  return (\r\n    <div id=\"wrapper\">\r\n      <div className=\" coman-modal coman-modal-a\" id=\"sign-in\">\r\n        <div\r\n          className=\"modal-dialog  modal-dialog-centered\"\r\n          role=\"document\"\r\n          style={{ textAlign: 'center' }}\r\n        >\r\n          <img\r\n            src={require('../../assets/img/logo-modal.png')}\r\n            alt=\"\"\r\n            style={{ marginBottom: '29px', width: 80 }}\r\n          />\r\n          <div className=\"modal-content  text-center\">\r\n            <h1>Reset Password</h1>\r\n            {!isLoading ? (\r\n              <div>\r\n                {isResetPasswordTokenValid ? (\r\n                  <Formik\r\n                    enableReinitialize\r\n                    initialValues={initialValues}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={(values, { setSubmitting }) => {\r\n                      submitBtnHandler(values);\r\n                      setSubmitting(false);\r\n                    }}\r\n                  >\r\n                    {({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                    }) => (\r\n                      <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-group text-align-left\">\r\n                          <label className=\"required-field\">Password</label>\r\n                          <input\r\n                            type=\"password\"\r\n                            className=\"form-control padding-left-15\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            value={values.password}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                          <div className=\"error-message\">\r\n                            {errors.password &&\r\n                              touched.password &&\r\n                              errors.password}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group text-align-left\">\r\n                          <label className=\"required-field\">\r\n                            Confirm Password\r\n                          </label>\r\n                          <input\r\n                            type=\"password\"\r\n                            className=\"form-control padding-left-15\"\r\n                            placeholder=\"Confirm password\"\r\n                            name=\"confirmPassword\"\r\n                            value={values.confirmPassword}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                          <div className=\"error-message\">\r\n                            {errors.confirmPassword &&\r\n                              touched.confirmPassword &&\r\n                              errors.confirmPassword}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"error-message\">{errorMsg}</div>\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"btn btn-primary\"\r\n                          disabled={isDisable}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                      </form>\r\n                    )}\r\n                  </Formik>\r\n                ) : (\r\n                  <>\r\n                    <h2>{errorMsg}</h2>\r\n                    <div style={{ marginBottom: '10px' }}>\r\n                      <Link\r\n                        to=\"/vendors/\"\r\n                        onClick={() => dispatch(resetErrorMsg())}\r\n                      >\r\n                        Go to Login\r\n                      </Link>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <h2>Loading...</h2>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div style={{ marginTop: '87px' }}>\r\n            &copy; Copyright 2020. All Rights Reserved\r\n          </div>\r\n          <div style={{ marginTop: '5px' }}>\r\n            <Link to=\"/vendors/privacy-policy\" style={{ marginRight: 10 }}>\r\n              Privacy Policy\r\n            </Link>\r\n            <Link to=\"/vendors/term-condition\">Terms & Conditions</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {open && <AlertMessageModal />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(ResetPassword);\r\n"],"sourceRoot":""}