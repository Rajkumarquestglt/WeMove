{"version":3,"sources":["http/index.js","hoc/SetTokenHeader/SetTokenHeader.js","components/UI/Model/AlertMessageModal.jsx","components/UI/Model/Model.jsx","views/chef/Orders/ViewOrderModal.jsx","views/chef/Orders/TrackOrderModal.jsx","views/chef/Orders/SelectVehicleType.jsx","views/chef/Orders/Orders.jsx"],"names":["SetTokenInterval","Component","axios","props","useState","interceptors","request","use","config","configObject","headers","Authorization","localStorage","getItem","interceptor","useEffect","eject","AlertMessageModal","useSelector","state","modal","message","notifyType","redirectURL","buttonClick","withButton","dispatch","useDispatch","className","id","tabIndex","role","aria-labelledby","style","display","zIndex","paddingTop","undefined","to","onClick","e","hideModal","stopPropagation","type","Model","headerTitle","children","submitBtnText","submitBtnHandler","cancelBtnText","cancelBtnHandler","closeModel","modalId","modalClass","errorMsg","isDisable","disabled","aria-hidden","ViewOrderModal","orderData","cookingInstructionsByAdmin","cookingInstructions","restaurantAddress","customerAddress","printComponentRef","useRef","genrateAddress","address","addressArray","apartment","area","city","houseNo","landmark","pincode","street","push","orderDeliverAddress","handlePrint","useReactToPrint","content","current","pageStyle","documentTitle","setModelOpen","ref","marginBottom","paddingLeft","colSpan","textAlign","orderNumber","userData","name","join","restaurantName","retsaurantContact","moment","createdAt","format","isSelfPickUp","isCODOrder","paymentStatus","dishList","map","item","index","key","_id","quantity","price","toFixed","total","discount","riderTip","GST","taxCharge","deliveryCharge","packagingCharge","grandTotal","trackingOrderStatus","TrackOrderModal","tableFilter","statusButtonText","setStatusButtonText","time","setTime","isStatusAvailable","setIsStatusAvailable","setMounted","order","orderTrack","indexTrackingOrderStatus","indexOf","status","getOrderTrackChefSaga","setTimeout","resetOrderTrack","width","editOrderStatusSaga","marginTop","SetTokenHeader","withRouter","mounted","data","setData","vehicleType","setVehicleType","isError","setIsError","console","log","getData","a","get","res","list","onChange","target","value","searchCardRequestEvent","modelOpen","modelOpenTrack","setModelOpenTrack","modelOpenSearchCard","setModelOpenSearchCard","selectedData","setSelectedData","setSearchFlag","isToggledDatePicker","setIsToggled","dateRangeValue","setDateRangeValue","setTableFilter","startDate","endDate","filterSearch","setFilterSearch","toggleDatePicker","useCallback","orders","allData","totalRecords","orderCount","acceptedOrderCount","deliveredOrderCount","preparingOrderCount","pendingOrderCount","pickedUpOrderCount","rejectedOrderCount","totalOrderCount","open","childRef","socket","columnName","orderBy","search","skip","limit","setTableFilters","getAllChefOrderSaga","getOrderCountSaga","resetOrdersListChef","tableFields","displayName","isDateTime","isConditional","positiveValue","negativeValue","isCapitalize","noSort","isActions","actions","view","action","conditionalKey","conditionalValue","handleChangeFilter","filter","initialRange","add","onSelect","range","start","end","blur","setCurrentPageChild","background","borderColor","tableData","pageCount","count","linkPropsName","val","initialSortColumnName","initialSortOrderBy","socketToken","JSON","parse","pickup","latitude","chefDetails","lat","parseFloat","longitude","long","io","query","transports","on","connected","from","point","distanceInKm","distance","emit","pickupAddress","stringify","destinationAddress","destinationLat","destinationLong","totalDistance","vehicleId","orderId","response","toast","position","hideProgressBar","containerId","autoClose"],"mappings":"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","file":"static/js/67.3223965a.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\r\nimport axios from './axios/axios_main';\r\n\r\nexport { axios };\r\n","import React, { useState, useEffect } from 'react';\r\n// import { AuthenticationContext } from \"../../contexts\";\r\n\r\nfunction SetTokenInterval(Component, axios) {\r\n  function WrappedComponent(props) {\r\n    // const authContext = useContext(AuthenticationContext);\r\n    const [interceptor] = useState(\r\n      axios.interceptors.request.use(config => {\r\n        const configObject = config;\r\n        configObject.headers.Authorization = `Bearer ${localStorage.getItem(\r\n          `authToken`,\r\n        )}`;\r\n        return configObject;\r\n      }),\r\n    );\r\n    useEffect(() => {\r\n      return () => {\r\n        axios.interceptors.request.eject(interceptor);\r\n      };\r\n    }, []);\r\n\r\n    return (\r\n      <>\r\n        <Component {...props} />\r\n      </>\r\n    );\r\n  }\r\n  return WrappedComponent;\r\n}\r\nexport default SetTokenInterval;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-nested-ternary */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { hideModal } from '../../../store/actions';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst AlertMessageModal = props => {\r\n  const {\r\n    message,\r\n    notifyType,\r\n    redirectURL,\r\n    buttonClick,\r\n    withButton,\r\n  } = useSelector(state => state.modal);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal-backdrop fade in error-modal-backdrop\" />\r\n      <div\r\n        className=\"modal coman-modal fade in error-modal\"\r\n        id=\"add-cat\"\r\n        tabIndex={-1}\r\n        role=\"dialog\"\r\n        aria-labelledby=\"myModalLabel\"\r\n        style={{ display: 'block', zIndex: 2052 }}\r\n        /* onClick={\r\n                redirectURL != undefined && redirectURL != \"\"\r\n                    ? () => {\r\n                        modalClose();\r\n                        if (redirectURL != undefined) {\r\n                            props.history.push(redirectURL);\r\n                        }\r\n                    }\r\n                    : modalClose\r\n            } */\r\n      >\r\n        <div className=\"modal-dialog modal-a\" role=\"document\">\r\n          <div\r\n            className={\r\n              notifyType === 2 || notifyType === 0\r\n                ? 'modal-content text-center animated bounceIn'\r\n                : 'modal-content text-center animated shake'\r\n            }\r\n          >\r\n            {' '}\r\n            {/* shake class when alert */}\r\n            <div className=\"modal-body\">\r\n              {/* {notifyType == 1\r\n                        ? ( */}\r\n\r\n              <div className=\"f-modal-alert\">\r\n                {notifyType === 1 ? (\r\n                  <div className=\"f-modal-icon f-modal-error animate\">\r\n                    <span className=\"f-modal-x-mark\">\r\n                      <span className=\"f-modal-line f-modal-left animateXLeft\" />\r\n                      <span className=\"f-modal-line f-modal-right animateXRight\" />\r\n                    </span>\r\n                    <div className=\"f-modal-placeholder\" />\r\n                    <div className=\"f-modal-fix\" />\r\n                  </div>\r\n                ) : notifyType === 2 ? (\r\n                  <div className=\"f-modal-icon f-modal-success animate\">\r\n                    <span className=\"f-modal-line f-modal-tip animateSuccessTip\" />\r\n                    <span className=\"f-modal-line f-modal-long animateSuccessLong\" />\r\n                    <div className=\"f-modal-placeholder\" />\r\n                    <div className=\"f-modal-fix\" />\r\n                  </div>\r\n                ) : notifyType === 3 ? (\r\n                  <div className=\"f-modal-icon f-modal-warning animate\">\r\n                    <span className=\"f-modal-body pulseWarningIns\" />\r\n                    <span className=\"f-modal-dot pulseWarningIns\" />\r\n                    <div className=\"f-modal-placeholder\" />\r\n                    <div className=\"f-modal-fix\" />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <p style={notifyType === 0 ? { paddingTop: '20px' } : {}}>\r\n                {message}\r\n              </p>\r\n              {withButton && (\r\n                <div className=\"text-center m-t-md\">\r\n                  {redirectURL !== undefined && redirectURL !== '' ? (\r\n                    <Link\r\n                      className=\"btn btn-primary\"\r\n                      to={redirectURL}\r\n                      onClick={\r\n                        buttonClick\r\n                          ? e => {\r\n                              dispatch(hideModal());\r\n                              e.stopPropagation();\r\n                              buttonClick();\r\n                            }\r\n                          : e => {\r\n                              dispatch(hideModal());\r\n                              e.stopPropagation();\r\n                            }\r\n                      }\r\n                    >\r\n                      Okay\r\n                    </Link>\r\n                  ) : (\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary\"\r\n                      onClick={\r\n                        buttonClick\r\n                          ? e => {\r\n                              dispatch(hideModal());\r\n                              e.stopPropagation();\r\n                              buttonClick();\r\n                            }\r\n                          : e => {\r\n                              dispatch(hideModal());\r\n                              e.stopPropagation();\r\n                            }\r\n                      }\r\n                    >\r\n                      Okay\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AlertMessageModal;\r\n","import React from 'react';\r\n\r\nconst Model = props => {\r\n  const {\r\n    headerTitle,\r\n    children,\r\n    submitBtnText,\r\n    submitBtnHandler,\r\n    cancelBtnText,\r\n    cancelBtnHandler,\r\n    closeModel,\r\n    modalId,\r\n    modalClass,\r\n    errorMsg,\r\n    isDisable,\r\n  } = props;\r\n\r\n  return (\r\n    <div\r\n      className=\"modal coman-modal fade in\"\r\n      tabIndex=\"-1\"\r\n      id={modalId || ''}\r\n      role=\"dialog\"\r\n      style={{ display: 'block' }}\r\n    >\r\n      <div\r\n        className={`modal-dialog ${modalClass || 'modal-sm text-center'}`}\r\n        role=\"document\"\r\n      >\r\n        <div className=\"modal-content\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            disabled={isDisable}\r\n            onClick={closeModel}\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n          {(headerTitle !== undefined ||\r\n            headerTitle != null ||\r\n            headerTitle !== '') && <h2>{headerTitle}</h2>}\r\n          {children}\r\n          <div className=\"error-message\">{errorMsg}</div>\r\n          <div className=\"text-center\">\r\n            {submitBtnText !== undefined &&\r\n              submitBtnText != null &&\r\n              submitBtnText !== '' && (\r\n                <button\r\n                  type=\"button\"\r\n                  disabled={isDisable}\r\n                  className=\"btn btn-primary  m-l-sm\"\r\n                  onClick={() => {\r\n                    if (typeof submitBtnHandler === 'function')\r\n                      submitBtnHandler();\r\n                    else closeModel();\r\n                  }}\r\n                >\r\n                  {submitBtnText}\r\n                </button>\r\n              )}\r\n            {cancelBtnText !== undefined &&\r\n              cancelBtnText != null &&\r\n              cancelBtnText !== '' && (\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isDisable}\r\n                  className=\"btn btn-primary m-l-sm\"\r\n                  onClick={() => {\r\n                    if (typeof cancelBtnHandler === 'function')\r\n                      cancelBtnHandler();\r\n                    closeModel();\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-backdrop fade in\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Model;\r\n","/* eslint-disable react/prop-types */\nimport React, { useState, useRef } from 'react';\nimport moment from 'moment';\nimport { useReactToPrint } from 'react-to-print';\nimport Model from '../../../components/UI/Model/Model';\n\n// eslint-disable-next-line no-unused-vars\nconst ViewOrderModal = props => {\n  const { orderData } = props;\n  const [cookingInstructions] = useState(orderData.cookingInstructionsByAdmin);\n  const restaurantAddress = [];\n  const customerAddress = [];\n  const printComponentRef = useRef();\n\n  const closeModel = () => {\n    const { setModelOpen } = props;\n    setModelOpen(false);\n  };\n\n  const genrateAddress = (address, addressArray) => {\n    if (address) {\n      const {\n        apartment,\n        area,\n        city,\n        houseNo,\n        landmark,\n        pincode,\n        street,\n      } = address;\n      if (houseNo) {\n        addressArray.push(houseNo);\n      }\n      if (apartment) {\n        addressArray.push(apartment);\n      }\n      if (landmark) {\n        addressArray.push(landmark);\n      }\n      if (area) {\n        addressArray.push(area);\n      }\n      if (city) {\n        addressArray.push(city);\n      }\n      if (street) {\n        addressArray.push(street);\n      }\n      if (pincode) {\n        addressArray.push(pincode);\n      }\n    }\n  };\n\n  genrateAddress(orderData.restaurantAddress, restaurantAddress);\n  genrateAddress(orderData.orderDeliverAddress, customerAddress);\n\n  const handlePrint = useReactToPrint({\n    content: () => printComponentRef.current,\n    pageStyle: 'margin: 40px',\n    documentTitle: 'Invoice',\n  });\n\n  return (\n    <Model\n      closeModel={closeModel}\n      headerTitle=\"Order Details\"\n      modalId=\"printpreview\"\n      modalClass=\"modal-small\"\n      cancelBtnText=\"Add\"\n      submitBtnText=\"Print\"\n      submitBtnHandler={handlePrint}\n    >\n      {/* <button\n        type=\"button\"\n        style={{ width: '150px' }}\n        id=\"printdel\"\n        className=\"btn printleft btn-primary\"\n      >\n        <i className=\"fa fa-print\" style={{ marginRight: '10px' }} />\n        Print\n      </button> */}\n      <div ref={printComponentRef}>\n        <div className=\"printview-order\" id=\"printableArea\">\n          <div className=\"printview-order-inner\">\n            <table className=\"table\" style={{ marginBottom: 0 }}>\n              <tbody>\n                <tr>\n                  <td style={{ paddingLeft: 0 }}>\n                    <p>Invoice Number:</p>\n                  </td>\n                  <td colSpan={3} style={{ textAlign: 'left' }}>\n                    <b>\n                      <span>{orderData.orderNumber}</span>\n                    </b>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className=\"printview-order\" id=\"printableArea\">\n          <div className=\"printview-order-inner\">\n            <h3 className=\"sub_title\">Customer Details</h3>\n\n            <table className=\"table\" style={{ marginBottom: 2 }}>\n              <tbody>\n                <tr>\n                  <td>\n                    <p>Full Name :</p>\n                  </td>\n                  <td>\n                    <b>\n                      <p>{orderData.userData.name}</p>\n                    </b>\n                  </td>\n                </tr>\n                {/* <tr>\n                  <td>\n                    <p>Mobile :</p>\n                  </td>\n                  <td>\n                    <b>\n                      <p>{orderData.userData.phone}</p>\n                    </b>\n                  </td>\n                </tr> */}\n                <tr>\n                  <td>\n                    <p>Address :</p>\n                  </td>\n                  <td>\n                    <b>\n                      <p>{customerAddress.join(', ')}</p>\n                    </b>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div className=\"printview-order-inner\">\n            <h3 className=\"sub_title\">Vendor Details</h3>\n\n            <table className=\"table\">\n              <tbody>\n                <tr>\n                  <td>\n                    <p>Full Name :</p>\n                  </td>\n                  <td>\n                    <b>\n                      <p>{orderData.restaurantName}</p>\n                    </b>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <p>Mobile :</p>\n                  </td>\n                  <td>\n                    <b>\n                      <p>{orderData.retsaurantContact}</p>\n                    </b>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <p>Address :</p>\n                  </td>\n                  <td>\n                    <b>\n                      <p>{restaurantAddress.join(', ')}</p>\n                    </b>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div className=\"printview-order-inner order_details\">\n            <h3 className=\"sub_title\">Order Details</h3>\n\n            <table className=\"table \">\n              <tbody>\n                {/* <tr>\n                  <td>\n                    <p>Order ID :</p>\n                  </td>\n                  <td>\n                    <b>\n                      <p>{orderData.orderNumber}</p>\n                    </b>\n                  </td>\n                </tr> */}\n                <tr>\n                  <td>\n                    <p>Order Date :</p>\n                  </td>\n                  <td>\n                    <b>\n                      <p>\n                        {moment(orderData.createdAt).format(\n                          'DD/MM/YYYY hh:mm A ',\n                        )}\n                      </p>\n                    </b>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <p>Order Type :</p>\n                  </td>\n                  <td>\n                    <b>\n                      <p>{orderData.isSelfPickUp ? 'PickUp' : 'Delivery'}</p>\n                    </b>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <p>Payment Option :</p>\n                  </td>\n                  <td>\n                    <b>\n                      <p>{orderData.isCODOrder ? 'COD' : 'Online'}</p>\n                    </b>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <p>Payment Status :</p>\n                  </td>\n                  <td>\n                    <b>\n                      <p>{orderData.paymentStatus}</p>\n                    </b>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <p>Customer Comments :</p>\n                  </td>\n                  <td>\n                    <b>\n                      <p>{orderData.cookingInstructions || '-'}</p>\n                    </b>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <p>Admin Comments :</p>\n                  </td>\n                  <td>\n                    <b>\n                      <p>{cookingInstructions || '-'}</p>\n                    </b>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          {/* overall total table  */}\n          <div className=\"overallTable table-responsive \">\n            <table\n              className=\"table table-striped table-bordered\"\n              id=\"order-table\"\n            >\n              <thead>\n                <tr>\n                  <th>S.No.</th>\n                  <th>Item Name</th>\n                  <th>Qty</th>\n                  <th>Price (INR)</th>\n                  <th>Variety - Price (INR)</th>\n                </tr>\n              </thead>\n              <tbody>\n                {orderData.dishList.map((item, index) => (\n                  <tr key={item._id}>\n                    <td className=\"s_no\">{index + 1}</td>\n                    <td>{item.name}</td>\n                    <td>{item.quantity}</td>\n                    <td>{item.price.toFixed(2)}</td>\n                    <td className=\"ing\">\n                      <ul className=\"tbl_view\">\n                        <li>\n                          <span className=\"td lbl\">\n                            {`INR ${(item.quantity * item.price).toFixed(2)}`}\n                          </span>\n                        </li>\n                      </ul>\n                    </td>\n                  </tr>\n                ))}\n                <tr className=\"total_box\">\n                  <td colSpan={4} />\n                  <td>\n                    <ul className=\"tbl_view\">\n                      <li>\n                        <span className=\"td\">Subtotal</span>\n                        <span className=\"td lbl\">{`INR ${orderData.total.toFixed(\n                          2,\n                        )}`}</span>\n                      </li>\n                      {/* <li>\n                        <span className=\"td\">Offer Value</span>\n                        <span className=\"td lbl\">{`INR ${orderData.offerValue}`}</span>\n                      </li> */}\n                      <li>\n                        <span className=\"td\">Discount </span>\n                        <span className=\"td lbl\">{`INR ${orderData.discount.toFixed(\n                          2,\n                        )}`}</span>\n                      </li>\n                      <li>\n                        <span className=\"td\">Rider Tip</span>\n                        <span className=\"td lbl\">{`INR ${orderData.riderTip.toFixed(\n                          2,\n                        )}`}</span>\n                      </li>\n                      <li>\n                        <span className=\"td\">{`Tax (${orderData.GST}%)`}</span>\n                        <span className=\"td lbl\">{`INR ${orderData.taxCharge.toFixed(\n                          2,\n                        )}`}</span>\n                      </li>\n                      <li>\n                        <span className=\"td\">Delivery Fee</span>\n                        <span className=\"td lbl\">{`INR ${orderData.deliveryCharge.toFixed(\n                          2,\n                        )}`}</span>\n                      </li>\n                      <li>\n                        <span className=\"td\">Packaging Fee</span>\n                        <span className=\"td lbl\">{`INR ${orderData.packagingCharge.toFixed(\n                          2,\n                        )}`}</span>\n                      </li>\n                      <li>\n                        <span className=\"td\">Total</span>\n                        <span className=\"td lbl\">{`INR ${orderData.grandTotal.toFixed(\n                          2,\n                        )} `}</span>\n                      </li>\n                    </ul>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      {/* <div className=\"modal-footer\">\n        <button\n          type=\"button\"\n          className=\"btn grey\"\n          data-dismiss=\"modal\"\n          onClick={() => closeModel()}\n        >\n          Close\n        </button>\n      </div> */}\n    </Model>\n  );\n};\n\nexport default ViewOrderModal;\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport Model from '../../../components/UI/Model/Model';\r\nimport {\r\n  getOrderTrackChefSaga,\r\n  editOrderStatusSaga,\r\n  resetOrderTrack,\r\n} from '../../../store/actions';\r\n\r\nconst trackingOrderStatus = [\r\n  'Pending',\r\n  'Accepted',\r\n  'Preparing',\r\n  'ReadyForPickup',\r\n  'OnTheWayToPickUp',\r\n  'PickedUp',\r\n  'OnTheWayToDelivery',\r\n  'Delivered',\r\n];\r\n\r\nconst TrackOrderModal = props => {\r\n  const { orderData, tableFilter } = props;\r\n  const [statusButtonText, setStatusButtonText] = useState('');\r\n  const [time, setTime] = useState(45);\r\n  const [isStatusAvailable, setIsStatusAvailable] = useState(false);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [mounted, setMounted] = useState(false);\r\n  const {\r\n    orderTrack,\r\n    // eslint-disable-next-line no-unused-vars\r\n    errorMsg,\r\n  } = useSelector(state => state.order);\r\n  const indexTrackingOrderStatus = trackingOrderStatus.indexOf(\r\n    orderTrack.status,\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n    dispatch(getOrderTrackChefSaga({ id: orderData._id }));\r\n    if (indexTrackingOrderStatus !== 7) {\r\n      setTimeout(() => {\r\n        setTime(time - 1);\r\n      }, 1000);\r\n    }\r\n    return () => {\r\n      setMounted(false);\r\n      dispatch(resetOrderTrack());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (time === 0) {\r\n      setTime(45);\r\n      dispatch(getOrderTrackChefSaga({ id: orderData._id }));\r\n    } else {\r\n      // eslint-disable-next-line no-lonely-if\r\n      if (indexTrackingOrderStatus !== 7) {\r\n        setTimeout(() => {\r\n          setTime(time - 1);\r\n        }, 1000);\r\n      }\r\n    }\r\n  }, [time]);\r\n\r\n  const closeModel = () => {\r\n    const { setModelOpen } = props;\r\n    setModelOpen(false);\r\n  };\r\n\r\n  if (\r\n    (orderTrack.status === 'Accepted' ||\r\n      orderTrack.status === 'Preparing' ||\r\n      orderTrack.status === 'ReadyForPickup' ||\r\n      orderTrack.status === 'OnTheWayToPickUp') &&\r\n    !isStatusAvailable\r\n  ) {\r\n    if (orderTrack.status === 'Accepted') {\r\n      setStatusButtonText('Preparing');\r\n      setIsStatusAvailable(true);\r\n    }\r\n    if (orderTrack.status === 'Preparing') {\r\n      setStatusButtonText('Ready for Pickup');\r\n      setIsStatusAvailable(true);\r\n    }\r\n    if (orderTrack.status === 'ReadyForPickup' && orderTrack.isSelfPickUp) {\r\n      setStatusButtonText('Delivered');\r\n      setIsStatusAvailable(true);\r\n    }\r\n    // if (orderTrack.status === 'OnTheWayToPickUp' && !orderTrack.isSelfPickUp) {\r\n    //   setStatusButtonText('Picked up');\r\n    //   setIsStatusAvailable(true);\r\n    // }\r\n  }\r\n\r\n  const handleStatusChanges = () => {\r\n    if (statusButtonText === 'Preparing') {\r\n      dispatch(\r\n        editOrderStatusSaga({\r\n          status: 'Preparing',\r\n          id: orderTrack._id,\r\n          closeModel,\r\n          tableFilter,\r\n        }),\r\n      );\r\n    }\r\n    if (statusButtonText === 'Ready for Pickup') {\r\n      dispatch(\r\n        editOrderStatusSaga({\r\n          status: 'ReadyForPickup',\r\n          id: orderTrack._id,\r\n          closeModel,\r\n          tableFilter,\r\n        }),\r\n      );\r\n    }\r\n    if (statusButtonText === 'Delivered') {\r\n      dispatch(\r\n        editOrderStatusSaga({\r\n          status: 'Delivered',\r\n          id: orderTrack._id,\r\n          closeModel,\r\n          tableFilter,\r\n        }),\r\n      );\r\n    }\r\n    // if (statusButtonText === 'Picked up') {\r\n    //   dispatch(\r\n    //     editOrderStatusSaga({\r\n    //       status: 'PickedUp',\r\n    //       id: orderTrack._id,\r\n    //       closeModel,\r\n    //       tableFilter,\r\n    //     }),\r\n    //   );\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <Model\r\n      closeModel={closeModel}\r\n      headerTitle=\"Tracking Order\"\r\n      modalId=\"trackDeliveryBoy\"\r\n      modalClass=\"modal-lg\"\r\n      //   submitBtnText=\"Cancel\"\r\n    >\r\n      {statusButtonText && (\r\n        <div className=\"printview-order-inner m-b-md\">\r\n          <button\r\n            type=\"button\"\r\n            style={{ width: '150px' }}\r\n            id=\"printdel\"\r\n            className=\"btn printleft btn-primary\"\r\n            onClick={() => handleStatusChanges()}\r\n          >\r\n            {statusButtonText}\r\n          </button>\r\n        </div>\r\n      )}\r\n      <div style={{ marginTop: '0px' }}>\r\n        <div className=\"form_header\">\r\n          <h1>Order Information:</h1>\r\n        </div>\r\n        <div className=\"row \">\r\n          <div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\r\n            <div className=\"detail-title-a\">\r\n              <p>\r\n                <span> Order Number:</span>\r\n                {orderData.orderNumber}\r\n              </p>\r\n              <p>\r\n                <span>Order Date: </span>\r\n                {moment(orderData.createdAt).format('DD/MM/YYYY')}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\r\n            <div className=\"detail-title-a\">\r\n              <p>\r\n                <span>Order Time:</span>\r\n                {moment(orderData.createdAt).format('hh:mm A')}\r\n              </p>\r\n              <p>\r\n                <span>Order Total: </span>\r\n                {orderData.total}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"form_header\">\r\n        <h1>Order Tracking</h1>\r\n      </div>\r\n      {indexTrackingOrderStatus !== 7 && (\r\n        <div>{`Status will be update in ${time} seconds`}</div>\r\n      )}\r\n      <div className=\"kyc-top-bar clearfix\">\r\n        <ul>\r\n          <li className={indexTrackingOrderStatus >= 0 ? 'current' : ''}>\r\n            <div className=\"box\">\r\n              <div className=\"icon ic-3\">\r\n                <i className=\"fa fa-download\" aria-hidden=\"true\" />\r\n              </div>\r\n            </div>\r\n            <p>Pending</p>\r\n          </li>\r\n          <li className={indexTrackingOrderStatus >= 1 ? 'current' : ''}>\r\n            <div className=\"box\">\r\n              <div className=\"icon ic-3\">\r\n                <i className=\"fa fa-check\" aria-hidden=\"true\" />\r\n              </div>\r\n            </div>\r\n            <p>Accepted</p>\r\n          </li>\r\n          <li className={indexTrackingOrderStatus >= 2 ? 'current' : ''}>\r\n            <div className=\"box\">\r\n              <div className=\"icon ic-3\">\r\n                <i className=\"fa fa-check\" aria-hidden=\"true\" />\r\n              </div>\r\n            </div>\r\n            <p>Preparing</p>\r\n          </li>\r\n          <li className={indexTrackingOrderStatus >= 3 ? 'current' : ''}>\r\n            <div className=\"box\">\r\n              <div className=\"icon ic-3\">\r\n                <i className=\"fa fa-motorcycle\" aria-hidden=\"true\" />\r\n              </div>\r\n            </div>\r\n            <p>Ready for Pickup</p>\r\n          </li>\r\n          {!orderData.isSelfPickUp && (\r\n            <li className={indexTrackingOrderStatus >= 4 ? 'current' : ''}>\r\n              <div className=\"box\">\r\n                <div className=\"icon ic-3\">\r\n                  <i className=\"fa fa-motorcycle\" aria-hidden=\"true\" />\r\n                </div>\r\n              </div>\r\n              <p>On the way to Pick up</p>\r\n            </li>\r\n          )}\r\n          {!orderData.isSelfPickUp && (\r\n            <li className={indexTrackingOrderStatus >= 5 ? 'current' : ''}>\r\n              <div className=\"box\">\r\n                <div className=\"icon ic-3\">\r\n                  <i className=\"fa fa-check\" aria-hidden=\"true\" />\r\n                </div>\r\n              </div>\r\n              <p>Picked up</p>\r\n            </li>\r\n          )}\r\n          {!orderData.isSelfPickUp && (\r\n            <li className={indexTrackingOrderStatus >= 6 ? 'current' : ''}>\r\n              <div className=\"box\">\r\n                <div className=\"icon ic-3\">\r\n                  <i className=\"fa fa-motorcycle\" aria-hidden=\"true\" />\r\n                </div>\r\n              </div>\r\n              <p>On the way to Delivey</p>\r\n            </li>\r\n          )}\r\n          <li className={indexTrackingOrderStatus >= 7 ? 'current' : ''}>\r\n            <div className=\"box\">\r\n              <div className=\"icon ic-3\">\r\n                <i className=\"fa fa-check\" aria-hidden=\"true\" />\r\n              </div>\r\n            </div>\r\n            <p>Delivered</p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"track_ship_flow\" />\r\n    </Model>\r\n  );\r\n};\r\n\r\nexport default TrackOrderModal;\r\n","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport SetTokenHeader from '../../../hoc/SetTokenHeader/SetTokenHeader';\nimport { axios } from '../../../http';\nimport Model from '../../../components/UI/Model/Model';\n\n// To-do Setup -->Get ALl Veghicle Saga\nconst SelectVehicleType = props => {\n  const [mounted, setMounted] = useState(false);\n  const [data, setData] = useState(null);\n  const [vehicleType, setVehicleType] = useState('');\n  const [isError, setIsError] = useState(false);\n\n  console.log(data);\n  const getData = async () => {\n    try {\n      const res = await axios.get(\n        'http://15.206.206.131:3000/driver/vehicleList',\n      );\n      if (res.status === 200) {\n        console.log(res.data);\n        setData(res.data.data.list);\n      } else {\n        setData([]);\n      }\n    } catch (err) {\n      setData([]);\n    }\n  };\n\n  useEffect(() => {\n    if (!mounted) {\n      getData();\n    }\n    setMounted(true);\n    return () => {\n      setMounted(false);\n    };\n  }, []);\n\n  const closeModel = () => {\n    const { setModelOpen } = props;\n    setModelOpen(false);\n  };\n\n  const handleSubmit = () => {\n    if (vehicleType !== '') {\n      setIsError(false);\n      const { searchCardRequestEvent } = props;\n      searchCardRequestEvent(vehicleType);\n      closeModel();\n    } else {\n      setIsError(true);\n    }\n  };\n\n  return (\n    <Model\n      closeModel={closeModel}\n      headerTitle=\"Vehicle Type\"\n      modalId=\"trackDeliveryBoy\"\n      modalClass=\"modal-sm\"\n      //   submitBtnText=\"Cancel\"\n    >\n      {data !== null ? (\n        <>\n          <select\n            className=\"form-control\"\n            onChange={e => setVehicleType(e.target.value)}\n          >\n            <option value=\"\">Select Vehicle Type</option>\n            {data.map(item => (\n              <option key={item._id} value={item._id}>\n                {item.type}\n              </option>\n            ))}\n          </select>\n          <div className=\"error-message\">\n            {isError && 'Please select vehicle type'}\n          </div>\n          <div className=\"col-12 text-center\" style={{ marginTop: 10 }}>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={handleSubmit}\n            >\n              Submit\n            </button>\n          </div>\n        </>\n      ) : (\n        <div className=\"col-12 text-center\">Loading...</div>\n      )}\n    </Model>\n  );\n};\n\nexport default SetTokenHeader(withRouter(SelectVehicleType), axios);\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport io from 'socket.io-client';\nimport { point, distance } from '@turf/turf';\nimport { toast } from 'react-toastify';\nimport DateRangePicker from 'react-daterange-picker';\nimport 'react-daterange-picker/dist/css/react-calendar.css';\nimport moment from 'moment';\nimport SetTokenHeader from '../../../hoc/SetTokenHeader/SetTokenHeader';\nimport { axios } from '../../../http';\nimport { Table } from '../../../components';\nimport ViewOrderModal from './ViewOrderModal';\nimport TrackOrderModal from './TrackOrderModal';\nimport {\n  getAllChefOrderSaga,\n  getOrderCountSaga,\n  resetOrdersListChef,\n} from '../../../store/actions';\nimport AlertMessageModal from '../../../components/UI/Model/AlertMessageModal';\nimport SelectVehicleType from './SelectVehicleType';\n\nconst SOCKET_URI = 'http://3.21.49.79:6025';\n\n// eslint-disable-next-line no-unused-vars\nconst Orders = props => {\n  const [modelOpen, setModelOpen] = useState(false);\n  const [modelOpenTrack, setModelOpenTrack] = useState(false);\n  const [modelOpenSearchCard, setModelOpenSearchCard] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  const [selectedData, setSelectedData] = useState(null);\n  // eslint-disable-next-line no-unused-vars\n  const [searchFlag, setSearchFlag] = useState(false);\n  const [isToggledDatePicker, setIsToggled] = useState(false);\n  const [dateRangeValue, setDateRangeValue] = useState(null);\n  const [tableFilter, setTableFilter] = useState({});\n  const [filterSearch, setFilterSearch] = useState({\n    isSelfPickUp: '',\n    status: '',\n    startDate: '',\n    endDate: '',\n  });\n  const setTableFilters = (columnName, orderBy, search, skip, limit) => {\n    tableFilter.columnName = columnName;\n    tableFilter.orderBy = orderBy;\n    tableFilter.search = search;\n    tableFilter.skip = skip;\n    tableFilter.limit = limit;\n    setTableFilter(tableFilter);\n  };\n  const toggleDatePicker = useCallback(() =>\n    setIsToggled(!isToggledDatePicker),\n  );\n  const {\n    orders: { list: allData, totalRecords },\n    orderCount: {\n      acceptedOrderCount,\n      deliveredOrderCount,\n      preparingOrderCount,\n      pendingOrderCount,\n      pickedUpOrderCount,\n      rejectedOrderCount,\n      totalOrderCount,\n    },\n    // eslint-disable-next-line no-unused-vars\n    errorMsg,\n  } = useSelector(state => state.order);\n  const { open } = useSelector(state => state.modal);\n  const childRef = useRef();\n  const socket = useRef();\n\n  const dispatch = useDispatch();\n  const getData = (columnName, orderBy, search, skip, limit) => {\n    setTableFilters(columnName, orderBy, search, skip, limit);\n    if (search && skip !== 0) {\n      dispatch(\n        getAllChefOrderSaga({\n          columnName,\n          orderBy,\n          search,\n          skip: 0,\n          limit,\n          filterSearch,\n        }),\n      );\n    } else {\n      dispatch(\n        getAllChefOrderSaga({\n          columnName,\n          orderBy,\n          search,\n          skip,\n          limit,\n          filterSearch,\n        }),\n      );\n    }\n  };\n\n  useEffect(() => {\n    setMounted(true);\n    dispatch(getOrderCountSaga());\n    getData('createdAt', 'desc', '', 0, 10);\n    return () => {\n      dispatch(resetOrdersListChef());\n      setMounted(false);\n    };\n  }, []);\n\n  const searchCardRequestEvent = vehicleType => {\n    if (selectedData.status !== 'ReadyForPickup') {\n      return;\n    }\n\n    const socketToken = localStorage.getItem('socketToken');\n    const userData = JSON.parse(localStorage.getItem('userData'));\n\n    const pickup = {\n      latitude: userData.chefDetails?.lat\n        ? parseFloat(userData.chefDetails.lat)\n        : '',\n      longitude: userData.chefDetails?.long\n        ? parseFloat(userData.chefDetails?.long)\n        : '',\n    };\n\n    socket.current = io(SOCKET_URI, {\n      // Temporary\n      query: `token=${socketToken}`,\n      transports: ['websocket'],\n    });\n\n    socket.current.on('connect', () => {\n      console.log(socket.current.connected); // true\n\n      const from = point([pickup.longitude, pickup.latitude]);\n      const to = point([\n        selectedData.orderDeliverAddress?.longitude,\n        selectedData.orderDeliverAddress?.latitude,\n      ]);\n\n      const distanceInKm = distance(from, to);\n      socket.current.emit(\n        'search-car-on-request-ride',\n        {\n          lat: pickup.latitude,\n          long: pickup.longitude,\n          pickupAddress: JSON.stringify(selectedData.restaurantAddress),\n          destinationAddress: JSON.stringify(selectedData.orderDeliverAddress),\n          destinationLat: selectedData.orderDeliverAddress?.latitude,\n          destinationLong: selectedData.orderDeliverAddress?.longitude,\n          totalDistance: `${distanceInKm} km`,\n          vehicleId: vehicleType,\n          orderId: selectedData._id,\n        },\n        response => {\n          console.log(response.status); // ok\n\n          if (response.status === 200) {\n            toast(response.message, {\n              position: 'top-center',\n              hideProgressBar: true,\n              containerId: 'appLayoutToaster',\n              type: 'success',\n              autoClose: 3500,\n            });\n          } else {\n            toast(response.message, {\n              position: 'top-center',\n              hideProgressBar: true,\n              containerId: 'appLayoutToaster',\n              type: 'error',\n              autoClose: 3500,\n            });\n          }\n        },\n      );\n    });\n  };\n\n  useEffect(() => {\n    if (mounted) {\n      if (\n        filterSearch.status === '' &&\n        filterSearch.isSelfPickUp === '' &&\n        filterSearch.startDate === '' &&\n        filterSearch.endDate === ''\n      ) {\n        getData('createdAt', 'desc', '', 0, 10);\n      }\n    }\n  }, [filterSearch]);\n\n  const viewOrder = data => {\n    setSelectedData(data);\n    setModelOpen(true);\n  };\n\n  const trackOrder = data => {\n    setSelectedData(data);\n    setModelOpenTrack(true);\n  };\n\n  const searchCard = data => {\n    setSelectedData(data);\n    setModelOpenSearchCard(true);\n  };\n\n  const tableFields = [\n    {\n      displayName: 'Order Number',\n      key: 'orderNumber',\n    },\n    {\n      displayName: 'Date Time',\n      key: 'createdAt',\n      isDateTime: true,\n    },\n    {\n      displayName: 'Customer Name',\n      key: 'userName',\n    },\n    {\n      displayName: 'Customer Number',\n      key: 'phone',\n    },\n    {\n      displayName: 'Order Type',\n      key: 'isSelfPickUp',\n      isConditional: true,\n      positiveValue: 'PickUp',\n      negativeValue: 'Delivery',\n    },\n    // {\n    //   displayName: 'Vendor Name',\n    //   key: 'restaurantName',\n    // },\n    {\n      displayName: 'Payment Mode',\n      key: 'isCODOrder',\n      isConditional: true,\n      positiveValue: 'COD',\n      negativeValue: 'Online',\n    },\n    {\n      displayName: 'Order Status',\n      key: 'status',\n      isCapitalize: true,\n    },\n    {\n      displayName: 'Order Amount',\n      key: 'grandTotal',\n    },\n    {\n      displayName: 'Actions',\n      noSort: true,\n      isActions: true,\n      actions: [\n        {\n          view: <i className=\"fa fa-eye\" aria-hidden=\"true\" />,\n          action: viewOrder,\n        },\n        {\n          view: <i className=\"fa fa-map-marker\" aria-hidden=\"true\" />,\n          action: trackOrder,\n          conditionalKey: 'status',\n          conditionalValue: 'Rejected',\n        },\n        {\n          view: ({ status, isSelfPickUp }) => {\n            // status !== 'ReadyForPickup' ? { color: 'red' } : ''\n            return (\n              <i\n                className={`fa fa-truck ${\n                  status !== 'ReadyForPickup' || isSelfPickUp\n                    ? 'disable-click'\n                    : ''\n                }`}\n                aria-hidden=\"true\"\n              />\n            );\n          },\n          action: searchCard,\n        },\n      ],\n    },\n  ];\n\n  const searchFlagSetter = val => {\n    if (mounted) {\n      setSearchFlag(val);\n    }\n  };\n\n  const handleChangeFilter = (value, name) => {\n    const filter = { ...filterSearch };\n    filter[name] = value;\n    setFilterSearch(filter);\n  };\n\n  const handleSelectDateRange = range => {\n    setDateRangeValue(range);\n    handleChangeFilter(range.start.format('yyyy-MM-DD'), 'startDate');\n    handleChangeFilter(range.end.format('yyyy-MM-DD'), 'endDate');\n    toggleDatePicker();\n  };\n\n  return (\n    <div className=\"wrapper wrapper-content\">\n      <div className=\"row\">\n        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n          <div className=\"ibox\">\n            <div className=\"ibox-content\">\n              <div className=\"box-heading\">\n                <h2>Orders </h2>\n              </div>\n              <div className=\"row m-b-sm\">\n                <div className=\"col-xs-12 col-sm-6 col-lg-2\">\n                  <h4>Order type:</h4>\n                  <select\n                    className=\"form-control \"\n                    onChange={e =>\n                      handleChangeFilter(e.target.value, 'isSelfPickUp')\n                    }\n                    value={filterSearch.isSelfPickUp}\n                  >\n                    <option value=\"\">Select order Type</option>\n                    <option value=\"false\">Delivery</option>\n                    <option value=\"true\">Pick Up</option>\n                  </select>\n                </div>\n                <div className=\"col-xs-12 col-sm-6 col-lg-2\">\n                  <h4>Order status:</h4>\n                  <select\n                    className=\"form-control\"\n                    onChange={e => handleChangeFilter(e.target.value, 'status')}\n                    value={filterSearch.status}\n                  >\n                    <option value=\"\">Select order status</option>\n                    <option value=\"Pending\">Pending</option>\n                    <option value=\"Accepted\">Accepted</option>\n                    <option value=\"Rejected\">Rejected</option>\n                    <option value=\"Preparing\">Preparing</option>\n                    <option value=\"ReadyForPickup\">Ready for pickup</option>\n                    <option value=\"OnTheWayToPickUp\">\n                      On the way to pickup\n                    </option>\n                    <option value=\"PickedUp\">PickedUp</option>\n                    <option value=\"OnTheWayToDelivery\">\n                      On the way to delivery\n                    </option>\n                    <option value=\"Delivered\">Delivered</option>\n                    <option value=\"Canceled\">Cancelled</option>\n                  </select>\n                </div>\n                <div className=\"col-sm-12 col-lg-8\">\n                  <h4>Select Date:</h4>\n                  <div className=\"row\">\n                    <div className=\"col-xs-12 col-sm-8 col-lg-8\">\n                      {isToggledDatePicker ? (\n                        <>\n                          {/* eslint-disable-next-line jsx-a11y/no-static-element-interactions */}\n                          <div\n                            className=\"modal-backdrop fade in date-backdrop\"\n                            onClick={() => {\n                              toggleDatePicker();\n                            }}\n                          />\n                          <DateRangePicker\n                            initialRange={(moment(), moment().add(2, 'days'))}\n                            // minimumDate={moment()}\n                            value={dateRangeValue}\n                            onSelect={handleSelectDateRange}\n                          />\n                        </>\n                      ) : (\n                        ''\n                      )}\n                      <div className=\"mb-10\" id=\"data_5\">\n                        <div\n                          className=\"input-daterange input-group\"\n                          id=\"datepicker\"\n                        >\n                          <span className=\"input-group-addon\">\n                            <i className=\"fa fa-calendar\" />\n                          </span>\n                          <input\n                            type=\"text\"\n                            className=\"input-sm form-control\"\n                            name=\"start\"\n                            value={\n                              (dateRangeValue &&\n                                dateRangeValue.start != null &&\n                                dateRangeValue.start.format('DD/MM/yyyy')) ||\n                              ''\n                            }\n                            onClick={e => {\n                              toggleDatePicker();\n                              e.target.blur();\n                            }}\n                          />\n                          <span className=\"input-group-addon bor-left\">to</span>\n                          <span className=\"input-group-addon\">\n                            <i className=\"fa fa-calendar\" />\n                          </span>\n                          <input\n                            type=\"text\"\n                            className=\"input-sm form-control\"\n                            name=\"end\"\n                            value={\n                              (dateRangeValue &&\n                                dateRangeValue.end != null &&\n                                dateRangeValue.end.format('DD/MM/yyyy')) ||\n                              ''\n                            }\n                            onClick={e => {\n                              toggleDatePicker();\n                              e.target.blur();\n                            }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-xs-6 col-sm-2 col-lg-2\">\n                      <button\n                        className=\"btn btn-primary with-100\"\n                        type=\"submit\"\n                        onClick={() => {\n                          getData('createdAt', 'desc', '', 0, 10);\n                          childRef.current.setCurrentPageChild();\n                        }}\n                      >\n                        Apply\n                      </button>\n                    </div>\n                    <div className=\"col-xs-6 col-sm-2 col-lg-2\">\n                      <button\n                        className=\"btn btn-primary with-100\"\n                        type=\"submit\"\n                        style={{\n                          background: '#80bbe7',\n                          borderColor: '#80bbe7',\n                        }}\n                        onClick={() => {\n                          setFilterSearch({\n                            isSelfPickUp: '',\n                            status: '',\n                            startDate: '',\n                            endDate: '',\n                          });\n                          setDateRangeValue({});\n                          childRef.current.setCurrentPageChild();\n                        }}\n                      >\n                        Reset\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div id=\"color\">\n                <div className=\"colours_action\">\n                  <ul className=\"animated zoomIn\">\n                    <li>\n                      <div className=\"icons-circle-number orange\">\n                        {pendingOrderCount}\n                      </div>\n                      <h4>Pending</h4>\n                    </li>\n                    <li>\n                      <div className=\"icons-circle-number dark-green\">\n                        {acceptedOrderCount}\n                      </div>\n                      <h4>Accepted</h4>\n                    </li>\n                    <li>\n                      <div className=\"icons-circle-number violet\">\n                        {preparingOrderCount}\n                      </div>\n                      <h4>Preparing</h4>\n                    </li>\n                    <li>\n                      <div className=\"icons-circle-number orange\">\n                        {deliveredOrderCount}\n                      </div>\n                      <h4>Delivered</h4>\n                    </li>\n                    <li>\n                      <div className=\"icons-circle-number dark-green\">\n                        {rejectedOrderCount}\n                      </div>\n                      <h4>Rejected</h4>\n                    </li>\n                    <li>\n                      <div className=\"icons-circle-number violet\">\n                        {pickedUpOrderCount}\n                      </div>\n                      <h4>Picked up</h4>\n                    </li>\n                    <li>\n                      <div className=\"icons-circle-number green\">\n                        {totalOrderCount}\n                      </div>\n                      <h4>Total</h4>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"coman-table\" id=\"owner-detail-btn2\">\n                <Table\n                  headers={tableFields}\n                  tableData={allData || null}\n                  pageCount={totalRecords?.count}\n                  getData={getData}\n                  // link={linkObj}\n                  linkPropsName=\"_id\"\n                  // statusAction={statusAction}\n                  setSearchFlag={searchFlagSetter}\n                  errorMsg={errorMsg || 'Loading...'}\n                  // pageSizeProp={pageSize}\n                  ref={childRef}\n                  initialSortColumnName=\"createdAt\"\n                  initialSortOrderBy=\"desc\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {modelOpen && (\n        <ViewOrderModal setModelOpen={setModelOpen} orderData={selectedData} />\n      )}\n      {modelOpenTrack && (\n        <TrackOrderModal\n          setModelOpen={setModelOpenTrack}\n          orderData={selectedData}\n          tableFilter={tableFilter}\n        />\n      )}\n      {modelOpenSearchCard && (\n        <SelectVehicleType\n          setModelOpen={setModelOpenSearchCard}\n          orderData={selectedData}\n          searchCardRequestEvent={searchCardRequestEvent}\n        />\n      )}\n      {open && <AlertMessageModal />}\n    </div>\n  );\n};\n\nexport default SetTokenHeader(Orders, axios);\n"],"sourceRoot":""}