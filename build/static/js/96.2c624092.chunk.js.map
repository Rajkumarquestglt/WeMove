{"version":3,"sources":["http/index.js","hoc/SetTokenHeader/SetTokenHeader.js","views/vehicleOwner/Drivers/Drivers.jsx"],"names":["SetTokenInterval","Component","axios","props","useState","interceptors","request","use","config","configObject","headers","Authorization","localStorage","getItem","interceptor","useEffect","eject","SetTokenHeader","status","mounted","setMounted","tableFilter","setTableFilter","setSearchFlag","dispatch","useDispatch","useSelector","state","driver","drivers","allData","list","totalRecords","errorMsg","getData","modal","open","columnName","orderBy","search","skip","limit","setTableFilters","getAllDriverSaga","tableFields","displayName","key","noSort","isMedia","mediaType","isStatus","positiveValue","action","data","editBlockDriverStatusSaga","id","isBlock","className","isRating","ratingType","redirectLink","isDate","editChefFeatureSaga","isFeatured","isActions","actions","view","aria-hidden","to","tableData","pageCount","count","linkPropsName","val"],"mappings":"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","file":"static/js/96.2c624092.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\r\nimport axios from './axios/axios_main';\r\n\r\nexport { axios };\r\n","import React, { useState, useEffect } from 'react';\r\n// import { AuthenticationContext } from \"../../contexts\";\r\n\r\nfunction SetTokenInterval(Component, axios) {\r\n  function WrappedComponent(props) {\r\n    // const authContext = useContext(AuthenticationContext);\r\n    const [interceptor] = useState(\r\n      axios.interceptors.request.use(config => {\r\n        const configObject = config;\r\n        configObject.headers.Authorization = `Bearer ${localStorage.getItem(\r\n          `authToken`,\r\n        )}`;\r\n        return configObject;\r\n      }),\r\n    );\r\n    useEffect(() => {\r\n      return () => {\r\n        axios.interceptors.request.eject(interceptor);\r\n      };\r\n    }, []);\r\n\r\n    return (\r\n      <>\r\n        <Component {...props} />\r\n      </>\r\n    );\r\n  }\r\n  return WrappedComponent;\r\n}\r\nexport default SetTokenInterval;\r\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SetTokenHeader from '../../../hoc/SetTokenHeader/SetTokenHeader';\nimport { axios } from '../../../http';\nimport { Table } from '../../../components';\n\nimport {\n  // eslint-disable-next-line no-unused-vars\n  getAllChefSaga,\n  // eslint-disable-next-line no-unused-vars\n  resetChefList,\n  editChefFeatureSaga,\n  getAllDriverSaga,\n  // eslint-disable-next-line no-unused-vars\n  resetDriverList,\n  editBlockDriverStatusSaga,\n} from '../../../store/actions';\n\n// eslint-disable-next-line no-unused-vars\nconst Drivers = props => {\n  // eslint-disable-next-line no-unused-vars\n  const [status, setStatus] = useState('approved');\n  const [mounted, setMounted] = useState(false);\n  // eslint-disable-next-line no-unused-vars\n  const [currentRecord, setCurrentRecord] = useState(null);\n  // const [commissionModelOpen, setCommissionModelOpen] = useState(false);\n  const [tableFilter, setTableFilter] = useState({});\n  // eslint-disable-next-line no-unused-vars\n  const [searchFlag, setSearchFlag] = useState(false);\n\n  // Add Driver Modal\n  // const [modelOpen, setModelOpen] = useState(false);\n  // eslint-disable-next-line no-unused-vars\n  const [isEdit, setEditCategory] = useState(false);\n\n  const setTableFilters = (columnName, orderBy, search, skip, limit) => {\n    tableFilter.columnName = columnName;\n    tableFilter.orderBy = orderBy;\n    tableFilter.search = search;\n    tableFilter.skip = skip;\n    tableFilter.limit = limit;\n    setTableFilter(tableFilter);\n  };\n\n  const dispatch = useDispatch();\n\n  const {\n    drivers: { list: allData, totalRecords },\n    // eslint-disable-next-line no-unused-vars\n    errorMsg,\n  } = useSelector(state => state.driver);\n  // eslint-disable-next-line no-unused-vars\n  const { open } = useSelector(state => state.modal);\n\n  const getData = (columnName, orderBy, search, skip, limit) => {\n    setTableFilters(columnName, orderBy, search, skip, limit);\n    if (search && skip !== 0) {\n      dispatch(\n        getAllDriverSaga({\n          columnName,\n          orderBy,\n          search,\n          skip: 0,\n          limit,\n          status,\n        }),\n      );\n    } else {\n      dispatch(\n        getAllDriverSaga({ columnName, orderBy, search, skip, limit, status }),\n      );\n    }\n  };\n\n  useEffect(() => {\n    setMounted(true);\n    getData('name', 'asc', '', 0, 10);\n    return () => setMounted(false);\n  }, []);\n\n  useEffect(() => {\n    if (mounted) {\n      getData();\n    }\n  }, [status]);\n\n  const statusAction = data => {\n    dispatch(editBlockDriverStatusSaga({ id: data.id, isBlock: data.status }));\n  };\n\n  const statusActionChefFeature = data => {\n    dispatch(editChefFeatureSaga({ id: data.id, isFeatured: data.status }));\n  };\n\n  const tableFields = [\n    { displayName: 'Driver ID', key: 'licenseNumber' },\n\n    {\n      displayName: 'Profile',\n      key: 'profile',\n      noSort: true,\n      isMedia: true,\n      mediaType: 'image',\n    },\n    {\n      displayName: 'Name',\n      key: 'name',\n      noSort: true,\n    },\n    {\n      displayName: 'Phone',\n      key: 'phone',\n    },\n    {\n      displayName: 'Trips',\n      key: 'trips',\n    },\n    {\n      displayName: 'Ride Income',\n      key: 'rideIncome',\n    },\n    {\n      displayName: 'Status',\n      key: 'isBlock',\n      noSort: true,\n      isStatus: true,\n      positiveValue: false,\n      action: statusAction,\n    },\n    // {\n    //   displayName: 'Feature',\n    //   key: 'isFeatured',\n    //   noSort: true,\n    //   isStatus: true,\n    //   positiveValue: true,\n    //   action: statusActionChefFeature,\n    // },\n    {\n      displayName: 'Driver Rating',\n      key: 'rating',\n      className: 'active-green',\n      isRating: true,\n      ratingType: 'star',\n      redirectLink: '/vendors/chefs/rating-detail',\n    },\n    {\n      displayName: 'Registered Date',\n      key: 'createdAt',\n      isDate: true,\n    },\n    {\n      displayName: 'Approved',\n      key: 'isApproved',\n      action: statusActionChefFeature,\n    },\n    // {\n    //   displayName: 'Commission(%)',\n    //   key: 'commissionPercentage',\n    //   isActions: true,\n    //   actions: [\n    //     {\n    //       view: record => <span>{record.commissionPercentage || 0}</span>,\n    //       action: record => {\n    //         setCommissionModelOpen(true);\n    //         setCurrentRecord(record);\n    //       },\n    //     },\n    //   ],\n    // },\n    {\n      displayName: 'Actions',\n      noSort: true,\n      isActions: true,\n      actions: [\n        {\n          view: <i className=\"fa fa-eye\" aria-hidden=\"true\" />,\n          action: '/vehicle-owner/drivers/driver-detail',\n        },\n      ],\n    },\n  ];\n\n  const searchFlagSetter = val => {\n    if (mounted) {\n      setSearchFlag(val);\n    }\n  };\n\n  return (\n    <div className=\"wrapper wrapper-content\">\n      <div className=\"row\">\n        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n          <div className=\"ibox\">\n            <div className=\"ibox-content\">\n              <div className=\"box-heading\">\n                <h2>LIST OF DRIVERS </h2>\n              </div>\n              {/* Temporary Add Driver Model for API Testing */}\n              <div className=\"text-right  d-flex-right\">\n                <Link\n                  to=\"/vehicle-owner/drivers/add-driver\"\n                  className=\"btn btn-primary m-l-sm m-b-md\"\n                >\n                  Add Driver\n                </Link>\n                {/* <button\n                  type=\"submit\"\n                  className=\"btn btn-primary m-l-sm m-b-md\"\n                  data-toggle=\"modal\"\n                  data-target=\"#send-modal\"\n                  onClick={() => {\n                    setEditCategory(false);\n                    setModelOpen(true);\n                  }}\n                >\n                  Add Driver\n                </button> */}\n              </div>\n              <div className=\"coman-table\" id=\"owner-detail-btn2\">\n                <Table\n                  headers={tableFields}\n                  tableData={allData || null}\n                  pageCount={totalRecords?.count}\n                  getData={getData}\n                  // link={linkObj}\n                  linkPropsName=\"_id\"\n                  // statusAction={statusAction}\n                  setSearchFlag={searchFlagSetter}\n                  errorMsg={errorMsg || 'Loading...'}\n                  // pageSizeProp={pageSize}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* {modelOpen && (\n        <AddDriverModel\n          setModelOpen={setModelOpen}\n          tableFilter={tableFilter}\n          isEdit={isEdit}\n        />\n      )} */}\n      {/* {commissionModelOpen && (\n        <DriverCommissionModel\n          setModelOpen={setCommissionModelOpen}\n          chefId={currentRecord._id}\n          isUpdated\n          commissionPercentage={currentRecord.commissionPercentage}\n          tableFilter={tableFilter}\n        />\n      )} */}\n    </div>\n  );\n};\n\nexport default SetTokenHeader(Drivers, axios);\n"],"sourceRoot":""}