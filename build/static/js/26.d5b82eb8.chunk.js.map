{"version":3,"sources":["http/index.js","hoc/SetTokenHeader/SetTokenHeader.js","constants/errorConstants.js","components/UI/Model/AlertMessageModal.jsx","components/UI/Model/Model.jsx","components/UI/Model/DeleteModel.jsx","views/admin/MenuSubCategories/AddSubCategoryModal.jsx","views/admin/MenuSubCategories/MenuSubCategories.jsx"],"names":["SetTokenInterval","Component","axios","props","useState","interceptors","request","use","config","configObject","headers","Authorization","localStorage","getItem","interceptor","useEffect","eject","REJECT_REASON","COMMISSION_PERCENTAGE_REQUIRED","CATEGORYNAME_REQUIRED","PHOTO_REQUIRED","PASSWORD_REQUIRED","OLD_PASSWORD_REQUIRED","SIMPLE_PASSWORD_VALIDATION","PASSWORD_VALIDATION","NEW_PASSWORD_REQUIRED","CONFIRM_PASSWORD_REQUIRED","CHANGE_PASSWORDS_NOT_MATCH","CHANGE_NEW_PASSWORDS_NOT_MATCH","SET_PASSWORDS_NOT_MATCH","FIRSTNAME_REQUIRED","LASTNAME_REQUIRED","EMAIL_REQUIRED","GENDER_REQUIRED","EMAIL_VALID","ADDRESS_REQUIRED","PHONE_REQUIRED","PHONE_VALID","RESTAURANT_CONTACT_VALID","MINIMUM_CART_REQUIRED","MINIMUM_CART_NUMBER","MAXIMUM_DISCOUNT_REQUIRED","MAXIMUM_DISCOUNT_NUMBER","COUPON_CODE_REQUIRED","COUPON_PERCENTAGE_REQUIRED","COUPON_PERCENTAGE_NUMBER","SELECT_RESTAURANT","SELECT_DATE_RANGE","SELECT_ONLY_IMAGE","GST_REQUIRED","PACKAGING_CHARGES_NUMBER","PACKAGING_CHARGES_REQUIRED","DELIVERY_CHARGE_KM_NUMBER","DELIVERY_CHARGE_KM_REQUIRED","ORDER_ACCEPT_TIME_NUMBER","ORDER_ACCEPT_TIME_REQUIRED","ORDER_PREPARING_TIME_NUMBER","ORDER_PREPARING_TIME_REQUIRED","CHEF_PLATFORM_FEE_REQUIRED","TCS_REQUIRED","PAYMENT_GATEWAY_TRANSACTION_PERCENTAGE_REQUIRED","CHEF_PLATFORM_FEE_NUMBER","TCS_NUMBER","PAYMENT_GATEWAY_TRANSACTION_PERCENTAGE_NUMBER","TITLE_REQUIRED","DEVICE_TYPE_REQUIRED","MESSAGE_REQUIRED","SELECT_CATEGORY","SELECT_FOOD_TYPE","PRICE_REQUIRED","PRICE_NUMBER","NAME_REQUIRED","ACCOUNT_NUMBER_REQUIRED","ACCOUNT_NUMBER_NUMBER","ACCOUNT_HOLDER_REQUIRED","IFSC_REQUIRED","RESTAURANT_NAME_REQUIRED","PAYMENT_OPTIONS_REQUIRED","ORDER_TYPE_REQUIRED","HOUSE_NUMBER_REQUIRED","LANDMARK_REQUIRED","AREA_REQUIRED","CITY_REQUIRED","STATE_REQUIRED","COUNTRY_REQUIRED","PINCODE_REQUIRED","PINCODE_VALID","ENTER_MESSAGE","DESCRIPTION_REQUIRED","OTP_REQUIRED","OTP_VALID","TRANSACTION_ID_REQUIRED","CHEF_NOT_SUBMIT_PROFILE","AlertMessageModal","useSelector","state","modal","message","notifyType","redirectURL","buttonClick","withButton","dispatch","useDispatch","className","id","tabIndex","role","aria-labelledby","style","display","zIndex","paddingTop","undefined","to","onClick","e","hideModal","stopPropagation","type","Model","headerTitle","children","submitBtnText","submitBtnHandler","cancelBtnText","cancelBtnHandler","closeModel","modalId","modalClass","errorMsg","isDisable","disabled","aria-hidden","DeleteModel","from","textAlign","AddSubCategoryModal","tableFilter","category","setIsDisable","dish","console","log","categoriesOptions","categories","list","setModelOpen","validationSchema","Yup","name","trim","required","enableReinitialize","initialValues","isEdit","categoryId","onSubmit","values","setSubmitting","editSubCategorySaga","_id","addSubCategorySaga","errors","touched","handleChange","handleBlur","handleSubmit","setFieldValue","setFieldTouched","placeholder","value","onChange","event","target","onBlur","map","item","status","key","SetTokenHeader","modelOpen","mounted","setMounted","setCategory","setEditCategory","setSearchFlag","setTableFilter","deleteId","setDeleteId","modelDeleteOpen","setModelDeleteOpen","subCategories","allData","totalRecords","open","getData","columnName","orderBy","search","skip","limit","setTableFilters","getAllCategorySaga","getAllSubCategorySaga","tableFields","displayName","isStatus","positiveValue","action","data","editSubCategoryStatusSaga","noSort","isActions","actions","view","payload","data-toggle","data-target","tableData","pageCount","count","link","linkPropsName","val","deleteSubCategorySaga"],"mappings":"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","file":"static/js/26.d5b82eb8.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\r\nimport axios from './axios/axios_main';\r\n\r\nexport { axios };\r\n","import React, { useState, useEffect } from 'react';\r\n// import { AuthenticationContext } from \"../../contexts\";\r\n\r\nfunction SetTokenInterval(Component, axios) {\r\n  function WrappedComponent(props) {\r\n    // const authContext = useContext(AuthenticationContext);\r\n    const [interceptor] = useState(\r\n      axios.interceptors.request.use(config => {\r\n        const configObject = config;\r\n        configObject.headers.Authorization = `Bearer ${localStorage.getItem(\r\n          `authToken`,\r\n        )}`;\r\n        return configObject;\r\n      }),\r\n    );\r\n    useEffect(() => {\r\n      return () => {\r\n        axios.interceptors.request.eject(interceptor);\r\n      };\r\n    }, []);\r\n\r\n    return (\r\n      <>\r\n        <Component {...props} />\r\n      </>\r\n    );\r\n  }\r\n  return WrappedComponent;\r\n}\r\nexport default SetTokenInterval;\r\n","/* eslint-disable import/prefer-default-export */\r\nexport const REJECT_REASON = 'Please enter reason for rejection';\r\nexport const COMMISSION_PERCENTAGE_REQUIRED = 'Commission is required';\r\nexport const CATEGORYNAME_REQUIRED = 'Category name is required';\r\nexport const PHOTO_REQUIRED = 'Photo is required';\r\nexport const PASSWORD_REQUIRED = 'Password is required';\r\nexport const OLD_PASSWORD_REQUIRED = 'Old password is required';\r\nexport const SIMPLE_PASSWORD_VALIDATION =\r\n  'Password must contain atleast 8 digits';\r\nexport const PASSWORD_VALIDATION =\r\n  'Password must contain atleast 1 capital, 1 number and 1 special character.';\r\nexport const NEW_PASSWORD_REQUIRED = 'New password is required';\r\nexport const CONFIRM_PASSWORD_REQUIRED = 'Confirm password is required';\r\nexport const CHANGE_PASSWORDS_NOT_MATCH =\r\n  'Password & confirm password don’t match';\r\nexport const CHANGE_NEW_PASSWORDS_NOT_MATCH =\r\n  'New password & confirm password don’t match';\r\nexport const SET_PASSWORDS_NOT_MATCH =\r\n  \"Password and Confirm password doesn't match\";\r\nexport const FIRSTNAME_REQUIRED = 'Firstname is required';\r\nexport const LASTNAME_REQUIRED = 'Lastname is required';\r\nexport const EMAIL_REQUIRED = 'Email is required';\r\nexport const GENDER_REQUIRED = 'Gender is required';\r\nexport const EMAIL_VALID = 'Email must be a valid email';\r\nexport const ADDRESS_REQUIRED = 'Address is required';\r\nexport const PHONE_REQUIRED = 'Phone is required';\r\nexport const PHONE_VALID = 'Phone is required and must contains 10 digits';\r\nexport const RESTAURANT_CONTACT_REQUIRED = 'Vendor contact is required';\r\nexport const RESTAURANT_CONTACT_VALID =\r\n  'Vendor contact must contains 10 digits';\r\nexport const MINIMUM_CART_REQUIRED = 'Minimum cart value is required';\r\nexport const MINIMUM_CART_NUMBER = 'Minimum cart value must be a number';\r\nexport const MAXIMUM_DISCOUNT_REQUIRED = 'Maximum discount required';\r\nexport const MAXIMUM_DISCOUNT_NUMBER = 'Maximum discount must be a number';\r\nexport const COUPON_CODE_REQUIRED = 'Coupon Code is required';\r\nexport const COUPON_PERCENTAGE_REQUIRED = 'Percentage is required';\r\nexport const COUPON_PERCENTAGE_NUMBER = 'Percentage must be a number';\r\nexport const SELECT_RESTAURANT = 'Please select vendors';\r\nexport const SELECT_DATE_RANGE = 'Please select a date range for the promocode';\r\nexport const SELECT_ONLY_IMAGE = 'Select image file only';\r\nexport const APP_EMAIL_REQUIRED = 'App email is required';\r\nexport const CUSTOMER_CARE_NUMBER_CART_NUMBER =\r\n  'Customer care number cart value must be a number';\r\nexport const CUSTOMER_CARE_NUMBER_CART_REQUIRED =\r\n  'Customer care number cart value is required';\r\nexport const GST_REQUIRED = 'GST is required';\r\nexport const PRE_ORDER_DELIVERY_DAYS_NUMBER =\r\n  'Pre order delivery days must be a number';\r\nexport const PRE_ORDER_DELIVERY_DAYS_REQUIRED =\r\n  'Pre order delivery days is required';\r\nexport const COMMISSION_NUMBER = 'Commission must be a number';\r\nexport const COMMISSION_REQUIRED = 'Commission is required';\r\nexport const PACKAGING_CHARGES_NUMBER = 'Packaging charges must be a number';\r\nexport const PACKAGING_CHARGES_REQUIRED = 'Packaging charges is required';\r\nexport const DELIVERY_CHARGE_KM_NUMBER = 'Delivery charge km must be a number';\r\nexport const DELIVERY_CHARGE_KM_REQUIRED = 'Delivery charge km is required';\r\nexport const ORDER_ACCEPT_TIME_NUMBER = 'Order accept time must be a number';\r\nexport const ORDER_ACCEPT_TIME_REQUIRED = 'Order accept time is required';\r\nexport const ORDER_PREPARING_TIME_NUMBER =\r\n  'Order preparing time must be a number';\r\nexport const ORDER_PREPARING_TIME_REQUIRED = 'Order preparing time is required';\r\nexport const CHEF_PLATFORM_FEE_REQUIRED = 'Vendor platform fee is required';\r\nexport const TCS_REQUIRED = 'TCS is required';\r\nexport const PAYMENT_GATEWAY_TRANSACTION_PERCENTAGE_REQUIRED =\r\n  'Payment gateway transaction percentage is required';\r\nexport const CHEF_PLATFORM_FEE_NUMBER = 'Vendor platform fee must be a number';\r\nexport const TCS_NUMBER = 'TCS must be a number';\r\nexport const PAYMENT_GATEWAY_TRANSACTION_PERCENTAGE_NUMBER =\r\n  'Payment gateway transaction percentage must be a number';\r\nexport const TITLE_REQUIRED = 'Title is required';\r\nexport const DEVICE_TYPE_REQUIRED = 'Device type is required';\r\nexport const MESSAGE_REQUIRED = 'Message is required';\r\nexport const SELECT_CATEGORY = 'Please select category';\r\nexport const SELECT_FOOD_TYPE = 'Please select sub category type';\r\nexport const PRICE_REQUIRED = 'Price is required';\r\nexport const PRICE_NUMBER = 'Price must be a number';\r\nexport const NAME_REQUIRED = 'Name is required';\r\nexport const ACCOUNT_NUMBER_REQUIRED = 'Account number is required';\r\nexport const ACCOUNT_NUMBER_NUMBER = 'Account number must be a number';\r\nexport const SWIFT_CODE_REQUIRED = 'Swift code is required';\r\nexport const ACCOUNT_HOLDER_REQUIRED = 'Account Holder is required';\r\nexport const IFSC_REQUIRED = 'IFSC code is required';\r\nexport const PICKUP_REQUIRED = 'Pickup is required';\r\nexport const PICKUP_TIME_REQUIRED = 'Pickup Time is required';\r\nexport const CUSTOM_PICKUP_REQUIRED = 'Custom Pickup is required';\r\nexport const DELIVERY_REQUIRED = 'Delivery is required';\r\nexport const DELIVERY_TIME_REQUIRED = 'Delivery Time is required';\r\nexport const CUSTOM_DELIVERY_REQUIRED = 'Custom Delivery is required';\r\nexport const RESTAURANT_NAME_REQUIRED = 'Vendor Name is required';\r\nexport const PAYMENT_OPTIONS_REQUIRED = 'Payment Options is required';\r\nexport const ORDER_TYPE_REQUIRED = 'Order type is required';\r\nexport const HOUSE_NUMBER_REQUIRED = 'House number is required';\r\nexport const APARTMENT_REQUIRED = 'Apartment is required';\r\nexport const LANDMARK_REQUIRED = 'Landmark is required';\r\nexport const AREA_REQUIRED = 'Area is required';\r\nexport const CITY_REQUIRED = 'City is required';\r\nexport const STATE_REQUIRED = 'State is required';\r\nexport const COUNTRY_REQUIRED = 'Country is required';\r\nexport const PINCODE_REQUIRED = 'Pincode is required';\r\nexport const PINCODE_VALID = 'Pincode must contains 6 digits';\r\nexport const ENTER_MESSAGE = 'Please enter message';\r\nexport const DESCRIPTION_REQUIRED = 'Description is required';\r\nexport const OTP_REQUIRED = 'Please insert OTP';\r\nexport const OTP_VALID = 'OTP must contains 6 digits';\r\nexport const TRANSACTION_ID_REQUIRED = 'Transaction id is required';\r\n\r\nexport const CHEF_NOT_SUBMIT_PROFILE =\r\n  'Vendor has not submit his/her profile yet.';\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-nested-ternary */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { hideModal } from '../../../store/actions';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst AlertMessageModal = props => {\r\n  const {\r\n    message,\r\n    notifyType,\r\n    redirectURL,\r\n    buttonClick,\r\n    withButton,\r\n  } = useSelector(state => state.modal);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal-backdrop fade in error-modal-backdrop\" />\r\n      <div\r\n        className=\"modal coman-modal fade in error-modal\"\r\n        id=\"add-cat\"\r\n        tabIndex={-1}\r\n        role=\"dialog\"\r\n        aria-labelledby=\"myModalLabel\"\r\n        style={{ display: 'block', zIndex: 2052 }}\r\n        /* onClick={\r\n                redirectURL != undefined && redirectURL != \"\"\r\n                    ? () => {\r\n                        modalClose();\r\n                        if (redirectURL != undefined) {\r\n                            props.history.push(redirectURL);\r\n                        }\r\n                    }\r\n                    : modalClose\r\n            } */\r\n      >\r\n        <div className=\"modal-dialog modal-a\" role=\"document\">\r\n          <div\r\n            className={\r\n              notifyType === 2 || notifyType === 0\r\n                ? 'modal-content text-center animated bounceIn'\r\n                : 'modal-content text-center animated shake'\r\n            }\r\n          >\r\n            {' '}\r\n            {/* shake class when alert */}\r\n            <div className=\"modal-body\">\r\n              {/* {notifyType == 1\r\n                        ? ( */}\r\n\r\n              <div className=\"f-modal-alert\">\r\n                {notifyType === 1 ? (\r\n                  <div className=\"f-modal-icon f-modal-error animate\">\r\n                    <span className=\"f-modal-x-mark\">\r\n                      <span className=\"f-modal-line f-modal-left animateXLeft\" />\r\n                      <span className=\"f-modal-line f-modal-right animateXRight\" />\r\n                    </span>\r\n                    <div className=\"f-modal-placeholder\" />\r\n                    <div className=\"f-modal-fix\" />\r\n                  </div>\r\n                ) : notifyType === 2 ? (\r\n                  <div className=\"f-modal-icon f-modal-success animate\">\r\n                    <span className=\"f-modal-line f-modal-tip animateSuccessTip\" />\r\n                    <span className=\"f-modal-line f-modal-long animateSuccessLong\" />\r\n                    <div className=\"f-modal-placeholder\" />\r\n                    <div className=\"f-modal-fix\" />\r\n                  </div>\r\n                ) : notifyType === 3 ? (\r\n                  <div className=\"f-modal-icon f-modal-warning animate\">\r\n                    <span className=\"f-modal-body pulseWarningIns\" />\r\n                    <span className=\"f-modal-dot pulseWarningIns\" />\r\n                    <div className=\"f-modal-placeholder\" />\r\n                    <div className=\"f-modal-fix\" />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <p style={notifyType === 0 ? { paddingTop: '20px' } : {}}>\r\n                {message}\r\n              </p>\r\n              {withButton && (\r\n                <div className=\"text-center m-t-md\">\r\n                  {redirectURL !== undefined && redirectURL !== '' ? (\r\n                    <Link\r\n                      className=\"btn btn-primary\"\r\n                      to={redirectURL}\r\n                      onClick={\r\n                        buttonClick\r\n                          ? e => {\r\n                              dispatch(hideModal());\r\n                              e.stopPropagation();\r\n                              buttonClick();\r\n                            }\r\n                          : e => {\r\n                              dispatch(hideModal());\r\n                              e.stopPropagation();\r\n                            }\r\n                      }\r\n                    >\r\n                      Okay\r\n                    </Link>\r\n                  ) : (\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary\"\r\n                      onClick={\r\n                        buttonClick\r\n                          ? e => {\r\n                              dispatch(hideModal());\r\n                              e.stopPropagation();\r\n                              buttonClick();\r\n                            }\r\n                          : e => {\r\n                              dispatch(hideModal());\r\n                              e.stopPropagation();\r\n                            }\r\n                      }\r\n                    >\r\n                      Okay\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AlertMessageModal;\r\n","import React from 'react';\r\n\r\nconst Model = props => {\r\n  const {\r\n    headerTitle,\r\n    children,\r\n    submitBtnText,\r\n    submitBtnHandler,\r\n    cancelBtnText,\r\n    cancelBtnHandler,\r\n    closeModel,\r\n    modalId,\r\n    modalClass,\r\n    errorMsg,\r\n    isDisable,\r\n  } = props;\r\n\r\n  return (\r\n    <div\r\n      className=\"modal coman-modal fade in\"\r\n      tabIndex=\"-1\"\r\n      id={modalId || ''}\r\n      role=\"dialog\"\r\n      style={{ display: 'block' }}\r\n    >\r\n      <div\r\n        className={`modal-dialog ${modalClass || 'modal-sm text-center'}`}\r\n        role=\"document\"\r\n      >\r\n        <div className=\"modal-content\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            disabled={isDisable}\r\n            onClick={closeModel}\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n          {(headerTitle !== undefined ||\r\n            headerTitle != null ||\r\n            headerTitle !== '') && <h2>{headerTitle}</h2>}\r\n          {children}\r\n          <div className=\"error-message\">{errorMsg}</div>\r\n          <div className=\"text-center\">\r\n            {submitBtnText !== undefined &&\r\n              submitBtnText != null &&\r\n              submitBtnText !== '' && (\r\n                <button\r\n                  type=\"button\"\r\n                  disabled={isDisable}\r\n                  className=\"btn btn-primary  m-l-sm\"\r\n                  onClick={() => {\r\n                    if (typeof submitBtnHandler === 'function')\r\n                      submitBtnHandler();\r\n                    else closeModel();\r\n                  }}\r\n                >\r\n                  {submitBtnText}\r\n                </button>\r\n              )}\r\n            {cancelBtnText !== undefined &&\r\n              cancelBtnText != null &&\r\n              cancelBtnText !== '' && (\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isDisable}\r\n                  className=\"btn btn-primary m-l-sm\"\r\n                  onClick={() => {\r\n                    if (typeof cancelBtnHandler === 'function')\r\n                      cancelBtnHandler();\r\n                    closeModel();\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-backdrop fade in\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Model;\r\n","import React from 'react';\r\n\r\nconst DeleteModel = props => {\r\n  const {\r\n    submitBtnText,\r\n    submitBtnHandler,\r\n    cancelBtnText,\r\n    cancelBtnHandler,\r\n    closeModel,\r\n    from,\r\n  } = props;\r\n\r\n  return (\r\n    <div\r\n      className=\"modal coman-modal fade in\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      style={{ display: 'block' }}\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <button type=\"button\" className=\"close\" onClick={() => closeModel()}>\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n          <h2>\r\n            {from === 'Logout'\r\n              ? 'Are you sure you want to logout?'\r\n              : 'Are you sure you want to Delete?'}\r\n          </h2>\r\n          <div className=\"clearfix\" style={{ textAlign: 'center' }}>\r\n            {cancelBtnText !== undefined &&\r\n              cancelBtnText != null &&\r\n              cancelBtnText !== '' && (\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary m-l-sm\"\r\n                  onClick={() => {\r\n                    if (typeof cancelBtnHandler === 'function') {\r\n                      cancelBtnHandler();\r\n                      closeModel();\r\n                    } else closeModel();\r\n                  }}\r\n                >\r\n                  {cancelBtnText}\r\n                </button>\r\n              )}\r\n            {submitBtnText !== undefined &&\r\n              submitBtnText != null &&\r\n              submitBtnText !== '' && (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary  m-l-sm\"\r\n                  onClick={() => {\r\n                    if (typeof submitBtnHandler === 'function') {\r\n                      submitBtnHandler();\r\n                      // closeModel();\r\n                    } else closeModel();\r\n                  }}\r\n                >\r\n                  {submitBtnText}\r\n                </button>\r\n              )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-backdrop fade in\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteModel;\r\n","import React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Model from '../../../components/UI/Model/Model';\nimport {\n  addSubCategorySaga,\n  editSubCategorySaga,\n} from '../../../store/actions';\nimport { CATEGORYNAME_REQUIRED } from '../../../constants/errorConstants';\n\nconst AddSubCategoryModal = props => {\n  const { tableFilter, category } = props;\n  const [isDisable, setIsDisable] = useState(false);\n  const { errorMsg } = useSelector(state => state.dish);\n\n  // const [isEditValueUpdated, setIsEditValueUpdated] = useState(false);\n  // const [initialValues, setInitialValues] = useState({\n  //   categoryId: '',\n  //   subCategoryId: '',\n  //   name: '',\n  // });\n\n  console.log('category to update', category);\n\n  const {\n    categories: { list: categoriesOptions },\n  } = useSelector(state => state.dish);\n\n  const closeModel = () => {\n    const { setModelOpen } = props;\n    setModelOpen(false);\n  };\n\n  const dispatch = useDispatch();\n\n  const validationSchema = Yup.object({\n    name: Yup.string().trim().required(CATEGORYNAME_REQUIRED),\n  });\n\n  // if (category) {\n  //   if (!isEditValueUpdated) {\n  //     const categoryIndex = categoriesOptions.findIndex(value => {\n  //       return value._id === category.categoryId;\n  //     });\n\n  //     console.log('index from which i will find category\\n', categoryIndex);\n  //     // console.log('comparing its name field \\n', categoriesOptions);\n  //     // console.log('to this field categoryName\\n', category);\n\n  //     // console.log(\n  //     //   'index from which i will find subCategory\\n',\n  //     //   subCategoryIndex,\n  //     // );\n  //     // console.log('comparing its name field \\n', subCategoriesOptions);\n  //     // console.log('to this field SubCategoryName\\n', editData);\n\n  //     setInitialValues({\n  //       categoryId: categoriesOptions[categoryIndex]._id,\n  //       name: category.name,\n  //     });\n  //     setIsEditValueUpdated(true);\n  //   }\n  // }\n\n  const submitBtnHandler = values => {\n    // setIsDisable(true);\n    console.log(values);\n    // return;\n    if (props.isEdit) {\n      dispatch(\n        editSubCategorySaga({\n          ...values,\n          id: props.category._id,\n          tableFilter,\n          closeModel,\n          setIsDisable,\n        }),\n      );\n    } else {\n      dispatch(\n        addSubCategorySaga({\n          ...values,\n          tableFilter,\n          closeModel,\n          setIsDisable,\n        }),\n      );\n    }\n  };\n\n  // const getImage = evt => {\n  //   const { files } = evt.target;\n  //   setcategoryImage(files[0]);\n  // };\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={{\n        name: props.isEdit ? props.category.name : '',\n        categoryId:\n          props.isEdit && category && category.categoryId\n            ? category.categoryId\n            : '',\n        // photo: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        submitBtnHandler(values);\n        setSubmitting(false);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setFieldValue,\n        setFieldTouched,\n      }) => (\n        <Model\n          closeModel={closeModel}\n          headerTitle={props.isEdit ? 'Edit Category' : 'Add Sub Category'}\n          submitBtnText={props.isEdit ? 'Edit' : 'Add'}\n          submitBtnHandler={handleSubmit}\n          isDisable={isDisable}\n          errorMsg={errorMsg}\n        >\n          <form>\n            <div className=\"from-group text-left\">\n              <h4 className=\"required-field\">Select Category</h4>\n              <select\n                className=\"form-control\"\n                name=\"categoryId\"\n                placeholder=\"Select category\"\n                value={values.categoryId}\n                onChange={event => {\n                  setFieldValue('categoryId', event.target.value);\n                }}\n                onBlur={() => setFieldTouched('categoryId', true)}\n              >\n                <option value=\"\" disabled>\n                  Select Category\n                </option>\n                {categoriesOptions.map(item => {\n                  if (item.status === true) {\n                    return (\n                      <option key={item._id} value={item._id}>\n                        {item.name}\n                      </option>\n                    );\n                  }\n                  return null;\n                })}\n              </select>\n              <div className=\"error-message\">\n                {errors.categoryId && touched.categoryId && errors.categoryId}\n              </div>\n            </div>\n            <div className=\"from-group text-left\">\n              <h4 className=\"required-field\">Name of Sub Category:</h4>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"name\"\n                value={values.name}\n                // onChange={e => setName(e.target.value)}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <div className=\"error-message\">\n                {errors.name && touched.name && errors.name}\n              </div>\n            </div>\n            {/* <div className=\"from-group text-left\">\n                <h4 className=\"required-field\">File name:</h4>\n                <input\n                  type=\"file\"\n                  name=\"photo\"\n                  id=\"photo\"\n                  accept=\"image/x-png ,image/png, image/jpeg, images/gif\"\n                  onChange={e => {\n                    const { files } = e.target;\n                    if (files[0]) {\n                      if (files[0].type.includes('image')) {\n                        const filename = files[0].name;\n                        const fileExtension = filename.substr(\n                          filename.lastIndexOf('.') + 1,\n                        );\n                        if (\n                          fileExtension.toLowerCase() === 'png' ||\n                          fileExtension.toLowerCase() === 'jpg' ||\n                          fileExtension.toLowerCase() === 'gif' ||\n                          fileExtension.toLowerCase() === 'jpeg'\n                        ) {\n                          setFieldValue('photo', e.currentTarget.files[0]);\n                        }\n                      }\n                    }\n                  }}\n                  // onChange={handleChange}\n                  onBlur={e => {\n                    const { files } = e.target;\n                    if (files[0]) {\n                      if (files[0].type.includes('image')) {\n                        const filename = files[0].name;\n                        const fileExtension = filename.substr(\n                          filename.lastIndexOf('.') + 1,\n                        );\n                        if (\n                          fileExtension.toLowerCase() === 'png' ||\n                          fileExtension.toLowerCase() === 'jpg' ||\n                          fileExtension.toLowerCase() === 'gif' ||\n                          fileExtension.toLowerCase() === 'jpeg'\n                        ) {\n                          setFieldValue('photo', e.currentTarget.files[0]);\n                        }\n                      }\n                    }\n                  }}\n                />\n                <div className=\"error-message\">\n                  {errors.photo && touched.photo && errors.photo}\n                </div>\n              </div> */}\n          </form>\n        </Model>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddSubCategoryModal;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AddCategoryModal from './AddSubCategoryModal';\nimport SetTokenHeader from '../../../hoc/SetTokenHeader/SetTokenHeader';\nimport { axios } from '../../../http/index';\nimport { Table } from '../../../components';\nimport {\n  getAllSubCategorySaga,\n  editSubCategoryStatusSaga,\n  getAllCategorySaga,\n  deleteSubCategorySaga,\n} from '../../../store/actions';\n\nimport DeleteModel from '../../../components/UI/Model/DeleteModel';\nimport AlertMessageModal from '../../../components/UI/Model/AlertMessageModal';\n\n// eslint-disable-next-line no-unused-vars\nconst MenuSubCategories = props => {\n  const [modelOpen, setModelOpen] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  const [category, setCategory] = useState('');\n  const [isEdit, setEditCategory] = useState(false);\n\n  // eslint-disable-next-line no-unused-vars\n  const [searchFlag, setSearchFlag] = useState(false);\n  const [tableFilter, setTableFilter] = useState({});\n  const [deleteId, setDeleteId] = useState('');\n  const [modelDeleteOpen, setModelDeleteOpen] = useState(false);\n\n  const setTableFilters = (columnName, orderBy, search, skip, limit) => {\n    tableFilter.columnName = columnName;\n    tableFilter.orderBy = orderBy;\n    tableFilter.search = search;\n    tableFilter.skip = skip;\n    tableFilter.limit = limit;\n    setTableFilter(tableFilter);\n  };\n\n  const dispatch = useDispatch();\n\n  const {\n    subCategories: { list: allData, totalRecords },\n    errorMsg,\n  } = useSelector(state => state.dish);\n  const { open } = useSelector(state => state.modal);\n\n  const getData = (columnName, orderBy, search, skip, limit) => {\n    setTableFilters(columnName, orderBy, search, skip, limit);\n    dispatch(\n      getAllCategorySaga({ columnName, orderBy, search, skip: 0, limit: 5000 }),\n    );\n    if (search && skip !== 0) {\n      dispatch(\n        getAllSubCategorySaga({ columnName, orderBy, search, skip: 0, limit }),\n      );\n    } else {\n      dispatch(\n        getAllSubCategorySaga({ columnName, orderBy, search, skip, limit }),\n      );\n    }\n  };\n\n  useEffect(() => {\n    setMounted(true);\n    getData('name', 'asc', '', 0, 10);\n    return () => setMounted(false);\n  }, []);\n\n  const statusAction = data => {\n    dispatch(editSubCategoryStatusSaga({ id: data.id, status: data.status }));\n  };\n  const openEditSubCategoryModal = data => {\n    setCategory(data);\n    setEditCategory(true);\n    setModelOpen(true);\n  };\n\n  const deleteAction = payload => {\n    setModelDeleteOpen(true);\n    setDeleteId(payload._id);\n  };\n\n  const tableFields = [\n    {\n      displayName: 'Name',\n      key: 'name',\n    },\n    {\n      displayName: 'Status',\n      key: 'status',\n      isStatus: true,\n      positiveValue: true,\n      action: statusAction,\n    },\n    {\n      displayName: 'Actions',\n      noSort: true,\n      isActions: true,\n      actions: [\n        {\n          view: <i className=\"fa fa-pencil\" aria-hidden=\"true\" />,\n          action: openEditSubCategoryModal,\n        },\n        {\n          view: <i className=\"fa fa-trash\" aria-hidden=\"true\" />,\n          action: deleteAction,\n        },\n      ],\n    },\n  ];\n\n  const linkObj = {};\n\n  const confirmDeleteAction = () => {\n    const id = deleteId;\n    setDeleteId('');\n    dispatch(deleteSubCategorySaga({ id, tableFilter, setModelDeleteOpen }));\n  };\n\n  const searchFlagSetter = val => {\n    if (mounted) {\n      setSearchFlag(val);\n    }\n  };\n\n  return (\n    <div className=\"wrapper wrapper-content\">\n      <div className=\"row\">\n        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n          <div className=\"ibox\">\n            <div className=\"ibox-content\">\n              <div className=\"box-heading\">\n                <h2>Sub-Category</h2>\n              </div>\n              <div className=\"text-right  d-flex-right\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary m-l-sm m-b-md\"\n                  data-toggle=\"modal\"\n                  data-target=\"#send-modal\"\n                  onClick={() => {\n                    setEditCategory(false);\n                    setModelOpen(true);\n                  }}\n                >\n                  Add Sub Category\n                </button>\n              </div>\n              <div className=\"coman-table\" id=\"owner-detail-btn\">\n                <Table\n                  headers={tableFields}\n                  tableData={allData || null}\n                  pageCount={totalRecords?.count}\n                  getData={getData}\n                  link={linkObj}\n                  linkPropsName=\"_id\"\n                  setSearchFlag={searchFlagSetter}\n                  errorMsg={errorMsg || 'Loading...'}\n                  // pageSizeProp={pageSize}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {modelOpen && (\n        <AddCategoryModal\n          setModelOpen={setModelOpen}\n          tableFilter={tableFilter}\n          category={category}\n          isEdit={isEdit}\n        />\n      )}\n      {modelDeleteOpen && (\n        <DeleteModel\n          setModelOpen={setModelDeleteOpen}\n          submitBtnText=\"Yes\"\n          submitBtnHandler={confirmDeleteAction}\n          cancelBtnText=\"No\"\n          closeModel={setModelDeleteOpen}\n        />\n      )}\n      {open && <AlertMessageModal />}\n    </div>\n  );\n};\n\nexport default SetTokenHeader(MenuSubCategories, axios);\n"],"sourceRoot":""}