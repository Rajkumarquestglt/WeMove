{"version":3,"sources":["http/index.js","hoc/SetTokenHeader/SetTokenHeader.js","components/UI/Model/AlertMessageModal.jsx","views/admin/ContactUs/ContactUs.jsx"],"names":["SetTokenInterval","Component","axios","props","useState","interceptors","request","use","config","configObject","headers","Authorization","localStorage","getItem","interceptor","useEffect","eject","AlertMessageModal","useSelector","state","modal","message","notifyType","redirectURL","buttonClick","withButton","dispatch","useDispatch","className","id","tabIndex","role","aria-labelledby","style","display","zIndex","paddingTop","undefined","to","onClick","e","hideModal","stopPropagation","type","SetTokenHeader","mounted","setMounted","isUserRequest","setIsUserRequest","setSearchFlag","tableFilter","setTableFilter","contactus","allData","list","totalRecords","errorMsg","open","getData","columnName","orderBy","search","skip","limit","setTableFilters","getAllContactusSaga","tableFields","displayName","key","noSort","isActions","actions","view","action","data","showModal","editMarkAsResolvedSaga","_id","email","userEmail","searchFlagSetter","val","data-toggle","href","resetContactUsList","tableData","pageCount","count","linkPropsName","initialSortColumnName"],"mappings":"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","file":"static/js/15.2e735620.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\r\nimport axios from './axios/axios_main';\r\n\r\nexport { axios };\r\n","import React, { useState, useEffect } from 'react';\r\n// import { AuthenticationContext } from \"../../contexts\";\r\n\r\nfunction SetTokenInterval(Component, axios) {\r\n  function WrappedComponent(props) {\r\n    // const authContext = useContext(AuthenticationContext);\r\n    const [interceptor] = useState(\r\n      axios.interceptors.request.use(config => {\r\n        const configObject = config;\r\n        configObject.headers.Authorization = `Bearer ${localStorage.getItem(\r\n          `authToken`,\r\n        )}`;\r\n        return configObject;\r\n      }),\r\n    );\r\n    useEffect(() => {\r\n      return () => {\r\n        axios.interceptors.request.eject(interceptor);\r\n      };\r\n    }, []);\r\n\r\n    return (\r\n      <>\r\n        <Component {...props} />\r\n      </>\r\n    );\r\n  }\r\n  return WrappedComponent;\r\n}\r\nexport default SetTokenInterval;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-nested-ternary */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { hideModal } from '../../../store/actions';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst AlertMessageModal = props => {\r\n  const {\r\n    message,\r\n    notifyType,\r\n    redirectURL,\r\n    buttonClick,\r\n    withButton,\r\n  } = useSelector(state => state.modal);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal-backdrop fade in error-modal-backdrop\" />\r\n      <div\r\n        className=\"modal coman-modal fade in error-modal\"\r\n        id=\"add-cat\"\r\n        tabIndex={-1}\r\n        role=\"dialog\"\r\n        aria-labelledby=\"myModalLabel\"\r\n        style={{ display: 'block', zIndex: 2052 }}\r\n        /* onClick={\r\n                redirectURL != undefined && redirectURL != \"\"\r\n                    ? () => {\r\n                        modalClose();\r\n                        if (redirectURL != undefined) {\r\n                            props.history.push(redirectURL);\r\n                        }\r\n                    }\r\n                    : modalClose\r\n            } */\r\n      >\r\n        <div className=\"modal-dialog modal-a\" role=\"document\">\r\n          <div\r\n            className={\r\n              notifyType === 2 || notifyType === 0\r\n                ? 'modal-content text-center animated bounceIn'\r\n                : 'modal-content text-center animated shake'\r\n            }\r\n          >\r\n            {' '}\r\n            {/* shake class when alert */}\r\n            <div className=\"modal-body\">\r\n              {/* {notifyType == 1\r\n                        ? ( */}\r\n\r\n              <div className=\"f-modal-alert\">\r\n                {notifyType === 1 ? (\r\n                  <div className=\"f-modal-icon f-modal-error animate\">\r\n                    <span className=\"f-modal-x-mark\">\r\n                      <span className=\"f-modal-line f-modal-left animateXLeft\" />\r\n                      <span className=\"f-modal-line f-modal-right animateXRight\" />\r\n                    </span>\r\n                    <div className=\"f-modal-placeholder\" />\r\n                    <div className=\"f-modal-fix\" />\r\n                  </div>\r\n                ) : notifyType === 2 ? (\r\n                  <div className=\"f-modal-icon f-modal-success animate\">\r\n                    <span className=\"f-modal-line f-modal-tip animateSuccessTip\" />\r\n                    <span className=\"f-modal-line f-modal-long animateSuccessLong\" />\r\n                    <div className=\"f-modal-placeholder\" />\r\n                    <div className=\"f-modal-fix\" />\r\n                  </div>\r\n                ) : notifyType === 3 ? (\r\n                  <div className=\"f-modal-icon f-modal-warning animate\">\r\n                    <span className=\"f-modal-body pulseWarningIns\" />\r\n                    <span className=\"f-modal-dot pulseWarningIns\" />\r\n                    <div className=\"f-modal-placeholder\" />\r\n                    <div className=\"f-modal-fix\" />\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <p style={notifyType === 0 ? { paddingTop: '20px' } : {}}>\r\n                {message}\r\n              </p>\r\n              {withButton && (\r\n                <div className=\"text-center m-t-md\">\r\n                  {redirectURL !== undefined && redirectURL !== '' ? (\r\n                    <Link\r\n                      className=\"btn btn-primary\"\r\n                      to={redirectURL}\r\n                      onClick={\r\n                        buttonClick\r\n                          ? e => {\r\n                              dispatch(hideModal());\r\n                              e.stopPropagation();\r\n                              buttonClick();\r\n                            }\r\n                          : e => {\r\n                              dispatch(hideModal());\r\n                              e.stopPropagation();\r\n                            }\r\n                      }\r\n                    >\r\n                      Okay\r\n                    </Link>\r\n                  ) : (\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary\"\r\n                      onClick={\r\n                        buttonClick\r\n                          ? e => {\r\n                              dispatch(hideModal());\r\n                              e.stopPropagation();\r\n                              buttonClick();\r\n                            }\r\n                          : e => {\r\n                              dispatch(hideModal());\r\n                              e.stopPropagation();\r\n                            }\r\n                      }\r\n                    >\r\n                      Okay\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AlertMessageModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Table } from '../../../components';\r\nimport { axios } from '../../../http';\r\nimport SetTokenHeader from '../../../hoc/SetTokenHeader/SetTokenHeader';\r\nimport {\r\n  getAllContactusSaga,\r\n  editMarkAsResolvedSaga,\r\n  resetContactUsList,\r\n  showModal,\r\n} from '../../../store/actions';\r\nimport AlertMessageModal from '../../../components/UI/Model/AlertMessageModal';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst ContactUs = props => {\r\n  const [mounted, setMounted] = useState(false);\r\n  const [isUserRequest, setIsUserRequest] = useState(false);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [searchFlag, setSearchFlag] = useState(false);\r\n  const [tableFilter, setTableFilter] = useState({});\r\n  const setTableFilters = (columnName, orderBy, search, skip, limit) => {\r\n    tableFilter.columnName = columnName;\r\n    tableFilter.orderBy = orderBy;\r\n    tableFilter.search = search;\r\n    tableFilter.skip = skip;\r\n    tableFilter.limit = limit;\r\n    setTableFilter(tableFilter);\r\n  };\r\n  const {\r\n    contactus: { list: allData, totalRecords },\r\n    // eslint-disable-next-line no-unused-vars\r\n    errorMsg,\r\n  } = useSelector(state => state.contactus);\r\n  const { open } = useSelector(state => state.modal);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const getData = (columnName, orderBy, search, skip, limit) => {\r\n    setTableFilters(columnName, orderBy, search, skip, limit);\r\n    if (search && skip !== 0) {\r\n      dispatch(\r\n        getAllContactusSaga({\r\n          columnName,\r\n          orderBy,\r\n          search,\r\n          skip: 0,\r\n          limit,\r\n          isUserRequest,\r\n        }),\r\n      );\r\n    } else {\r\n      dispatch(\r\n        getAllContactusSaga({\r\n          columnName,\r\n          orderBy,\r\n          search,\r\n          skip,\r\n          limit,\r\n          isUserRequest,\r\n        }),\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n    getData('userName', 'asc', '', 0, 10);\r\n    return () => setMounted(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (mounted) {\r\n      getData('userName', 'asc', '', 0, 10);\r\n    }\r\n  }, [isUserRequest]);\r\n\r\n  const makeAsResolve = data => {\r\n    dispatch(\r\n      showModal({\r\n        open: true,\r\n        notifyType: 0,\r\n        withButton: false,\r\n        message: `please wait a while...`,\r\n      }),\r\n    );\r\n    dispatch(\r\n      editMarkAsResolvedSaga({\r\n        id: data._id,\r\n        email: data.userEmail,\r\n        tableFilter: {\r\n          ...tableFilter,\r\n          isUserRequest,\r\n        },\r\n      }),\r\n    );\r\n  };\r\n\r\n  const tableFields = [\r\n    {\r\n      displayName: 'Full Name',\r\n      key: 'userName',\r\n    },\r\n    {\r\n      displayName: 'Email',\r\n      key: 'userEmail',\r\n    },\r\n    {\r\n      displayName: 'Message',\r\n      key: 'message',\r\n      // isMore: true,\r\n      // popoverTitleKey: 'userId',\r\n      // popoverDescriptionKey: 'message',\r\n    },\r\n    {\r\n      displayName: 'Actions',\r\n      noSort: true,\r\n      isActions: true,\r\n      actions: [\r\n        {\r\n          view: <span> Mark as resolved </span>,\r\n          action: makeAsResolve,\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const searchFlagSetter = val => {\r\n    if (mounted) {\r\n      setSearchFlag(val);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper wrapper-content\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n          <div className=\"ibox\">\r\n            <div className=\"ibox-content\">\r\n              <div className=\"box-heading\">\r\n                <h2>Contact us </h2>\r\n              </div>\r\n\r\n              <div className=\"tabs-container\" id=\"tab-new\">\r\n                <ul className=\"nav nav-tabs\">\r\n                  <li className=\"active\">\r\n                    <a\r\n                      data-toggle=\"tab\"\r\n                      href=\"#tab-1\"\r\n                      onClick={() => {\r\n                        setIsUserRequest(false);\r\n                        dispatch(resetContactUsList());\r\n                      }}\r\n                    >\r\n                      Queries from Vendor\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"\">\r\n                    <a\r\n                      data-toggle=\"tab\"\r\n                      href=\"#tab-2\"\r\n                      onClick={() => {\r\n                        setIsUserRequest(true);\r\n                        dispatch(resetContactUsList());\r\n                      }}\r\n                    >\r\n                      Queries from Customer\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n                <div className=\"tab-content\">\r\n                  <div id=\"tab-1\" className=\"tab-pane active\">\r\n                    <div className=\"panel-body\">\r\n                      <div className=\"coman-table\">\r\n                        <Table\r\n                          headers={tableFields}\r\n                          tableData={allData || null}\r\n                          pageCount={totalRecords?.count}\r\n                          getData={getData}\r\n                          linkPropsName=\"_id\"\r\n                          setSearchFlag={searchFlagSetter}\r\n                          errorMsg={errorMsg || 'Loading...'}\r\n                          initialSortColumnName=\"userName\"\r\n                          // pageSizeProp={pageSize}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div id=\"tab-2\" className=\"tab-pane\">\r\n                    <div className=\"panel-body\">\r\n                      <div className=\"coman-table\">\r\n                        <Table\r\n                          headers={tableFields}\r\n                          tableData={allData || null}\r\n                          pageCount={totalRecords?.count}\r\n                          getData={getData}\r\n                          linkPropsName=\"_id\"\r\n                          setSearchFlag={searchFlagSetter}\r\n                          errorMsg={errorMsg || 'Loading...'}\r\n                          initialSortColumnName=\"userName\"\r\n                          // pageSizeProp={pageSize}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {open && <AlertMessageModal />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetTokenHeader(ContactUs, axios);\r\n"],"sourceRoot":""}